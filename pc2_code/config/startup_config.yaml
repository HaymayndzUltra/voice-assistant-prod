# Canonical Startup Configuration for PC2 Sub-System
# Forged by CASCADE - Single Source of Truth

global_settings:
  environment:
    PYTHONPATH: '${PYTHONPATH}:${PWD}/..'
    LOG_LEVEL: 'INFO'
    DEBUG_MODE: 'false'
  resource_limits:
    cpu_percent: 80
    memory_mb: 4096
    max_threads: 8
  health_checks:
    interval_seconds: 30
    timeout_seconds: 10
    retries: 3

# PC2 Services (Agents)
pc2_services:
  # Phase 1 - Integration Layer Agents
  - {
      name: MemoryOrchestratorService,
      script_path: pc2_code/agents/memory_orchestrator_service.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7140",
      health_check_port: "${PORT_OFFSET}+8140",
      required: true,
      dependencies: [],
    }
  - {
      name: TieredResponder,
      script_path: pc2_code/agents/tiered_responder.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7100",
      health_check_port: "${PORT_OFFSET}+8100",
      required: true,
      dependencies: [ResourceManager],
    }
  - {
      name: AsyncProcessor,
      script_path: pc2_code/agents/async_processor.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7101",
      health_check_port: "${PORT_OFFSET}+8101",
      required: true,
      dependencies: [ResourceManager],
    }
  - {
      name: CacheManager,
      script_path: pc2_code/agents/cache_manager.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7102",
      health_check_port: "${PORT_OFFSET}+8102",
      required: true,
      dependencies: [MemoryOrchestratorService],
    }
  # REPLACED BY ObservabilityHub - Consolidated monitoring solution
  # - {
  #     name: PerformanceMonitor,
  #     script_path: pc2_code/agents/performance_monitor.py,
  #     host: 0.0.0.0,
  #     port: "${PORT_OFFSET}+7103",
  #     health_check_port: "${PORT_OFFSET}+8103",
  #     required: true,
  #     dependencies: [PerformanceLoggerAgent],
  #   }
  - {
      name: VisionProcessingAgent,
      script_path: pc2_code/agents/VisionProcessingAgent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7150",
      health_check_port: "${PORT_OFFSET}+8150",
      required: true,
      dependencies: [CacheManager],
    }

  # Phase 2 - PC2-Specific Core Agents
  - {
      name: DreamWorldAgent,
      script_path: pc2_code/agents/DreamWorldAgent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7104",
      health_check_port: "${PORT_OFFSET}+8104",
      dependencies: [MemoryOrchestratorService],
      required: true,
    }
  - {
      name: UnifiedMemoryReasoningAgent,
      script_path: pc2_code/agents/unified_memory_reasoning_agent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7105",
      health_check_port: "${PORT_OFFSET}+8105",
      dependencies: [MemoryOrchestratorService],
      required: true,
    }
  - {
      name: TutorAgent,
      script_path: pc2_code/agents/tutor_agent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7108",
      health_check_port: "${PORT_OFFSET}+8108",
      required: true,
      dependencies: [MemoryOrchestratorService],
    }
  - {
      name: TutoringAgent,
      script_path: pc2_code/agents/tutoring_agent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7131",
      health_check_port: "${PORT_OFFSET}+8131",
      dependencies: [MemoryOrchestratorService],
      required: true,
    }


  - {
      name: ContextManager,
      script_path: pc2_code/agents/context_manager.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7111",
      health_check_port: "${PORT_OFFSET}+8111",
      dependencies: [MemoryOrchestratorService],
      required: true,
    }
  - {
      name: ExperienceTracker,
      script_path: pc2_code/agents/experience_tracker.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7112",
      health_check_port: "${PORT_OFFSET}+8112",
      dependencies: [MemoryOrchestratorService],
      required: true,
    }
  - {
      name: ResourceManager,
      script_path: pc2_code/agents/resource_manager.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7113",
      health_check_port: "${PORT_OFFSET}+8113",
      required: true,
      dependencies: [ObservabilityHub], # Updated to use consolidated monitoring
    }
  # REPLACED BY ObservabilityHub - Consolidated monitoring solution  
  # - {
  #     name: HealthMonitor,
  #     script_path: pc2_code/agents/health_monitor.py,
  #     host: 0.0.0.0,
  #     port: "${PORT_OFFSET}+7114",
  #     health_check_port: "${PORT_OFFSET}+8114",
  #     required: true,
  #     dependencies: [PerformanceMonitor],
  #   }
  - {
      name: TaskScheduler,
      script_path: pc2_code/agents/task_scheduler.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7115",
      health_check_port: "${PORT_OFFSET}+8115",
      dependencies: [AsyncProcessor],
      required: true,
    }

  # ForPC2 Agents (PC2-Specific Services)
  - {
      name: AuthenticationAgent,
      script_path: pc2_code/agents/ForPC2/AuthenticationAgent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7116",
      health_check_port: "${PORT_OFFSET}+8116",
      required: true,
      dependencies: [UnifiedUtilsAgent],
    }
  # REPLACED BY ObservabilityHub - Consolidated monitoring solution
  # - {
  #     name: SystemHealthManager,
  #     script_path: pc2_code/agents/ForPC2/system_health_manager.py,
  #     host: 0.0.0.0,
  #     port: "${PORT_OFFSET}+7117",
  #     health_check_port: "${PORT_OFFSET}+8117",
  #     required: true,
  #     dependencies: [], # Removed HealthMonitor dependency to break circular reference
  #   }
  - {
      name: UnifiedUtilsAgent,
      script_path: pc2_code/agents/ForPC2/unified_utils_agent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7118",
      health_check_port: "${PORT_OFFSET}+8118",
      required: true,
      dependencies: [ObservabilityHub], # Updated to use consolidated monitoring
    }
  - {
      name: ProactiveContextMonitor,
      script_path: pc2_code/agents/ForPC2/proactive_context_monitor.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7119",
      health_check_port: "${PORT_OFFSET}+8119",
      dependencies: [ContextManager],
      required: true,
    }

  # Additional PC2 Core Agents
  - {
      name: AgentTrustScorer,
      script_path: pc2_code/agents/AgentTrustScorer.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7122",
      health_check_port: "${PORT_OFFSET}+8122",
      required: true,
      dependencies: [ObservabilityHub], # Updated to use consolidated monitoring
    }
  - {
      name: FileSystemAssistantAgent,
      script_path: pc2_code/agents/filesystem_assistant_agent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7123",
      health_check_port: "${PORT_OFFSET}+8123",
      required: true,
      dependencies: [UnifiedUtilsAgent],
    }
  - {
      name: RemoteConnectorAgent,
      script_path: pc2_code/agents/remote_connector_agent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7124",
      health_check_port: "${PORT_OFFSET}+8124",
      required: true,
      dependencies: [AdvancedRouter],
    }
  - {
      name: UnifiedWebAgent,
      script_path: pc2_code/agents/unified_web_agent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7126",
      health_check_port: "${PORT_OFFSET}+8126",
      required: true,
      dependencies: [FileSystemAssistantAgent, MemoryOrchestratorService],
    }
  - {
      name: DreamingModeAgent,
      script_path: pc2_code/agents/DreamingModeAgent.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7127",
      health_check_port: "${PORT_OFFSET}+8127",
      dependencies: [DreamWorldAgent],
      required: true,
    }
  # REPLACED BY ObservabilityHub - Consolidated monitoring solution
  # - {
  #     name: PerformanceLoggerAgent,
  #     script_path: pc2_code/agents/PerformanceLoggerAgent.py,
  #     host: 0.0.0.0,
  #     port: "${PORT_OFFSET}+7128",
  #     health_check_port: "${PORT_OFFSET}+8128",
  #     required: true,
  #     dependencies: [], # Removed SystemHealthManager dependency to break circular reference
  #   }
  - {
      name: AdvancedRouter,
      script_path: pc2_code/agents/advanced_router.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+7129",
      health_check_port: "${PORT_OFFSET}+8129",
      required: true,
      dependencies: [TaskScheduler],
    }

  # CONSOLIDATED MONITORING SOLUTION - Replaces legacy monitors
  - {
      name: ObservabilityHub,
      script_path: phase1_implementation/consolidated_agents/observability_hub/backup_observability_hub/observability_hub.py,
      host: 0.0.0.0,
      port: "${PORT_OFFSET}+9100",
      health_check_port: "${PORT_OFFSET}+9110",
      required: true,
      dependencies: [],  # Core monitoring service, no dependencies
      config: {
        scope: "pc2_agents",
        prometheus_port: "${PORT_OFFSET}+9100",
        cross_machine_sync: true,
        # Endpoint for the MainPC ObservabilityHub.  Uses environment variable
        # MAINPC_OBS_HUB so deployments can override without editing this file.
        mainpc_hub_endpoint: "${MAINPC_OBS_HUB}",
        parallel_health_checks: true,
        prediction_enabled: true
      }
    }


# Health check configuration (additional settings)
health_checks:
  start_period_seconds: 300

# PC2 Network Configuration
pc2_network:
  host: '0.0.0.0'
  agent_ports:
    start: 7100
    end: 7199
  health_check_ports:
    start: 8100
    end: 8199

# DUPLICATE REMOVED - MemoryOrchestratorService already defined in pc2_services section above
# This duplicate entry was causing port conflicts (7140 used twice) and health port confusion (8140 vs 7141)

error_bus_port: "${PORT_OFFSET}+7150"

# -----------------------------------------------------------------------------
# Logical Docker deployment group definitions (added 2025-07-31)
# These groups guide production Docker compose generation for RTX-3060 machine.
# -----------------------------------------------------------------------------
docker_groups:
  infra_core:
    description: Core observability & resource management infrastructure
    agents:
      - ObservabilityHub
      - ResourceManager
  memory_stack:
    description: Memory orchestration & reasoning services
    agents:
      - MemoryOrchestratorService
      - CacheManager
      - UnifiedMemoryReasoningAgent
      - ContextManager
      - ExperienceTracker
  async_pipeline:
    description: Asynchronous task processing & routing pipeline
    agents:
      - AsyncProcessor
      - TaskScheduler
      - AdvancedRouter
      - TieredResponder
  tutoring_cpu:
    description: Tutoring and educational agents (CPU-bound)
    agents:
      - TutorAgent
      - TutoringAgent
  vision_dream_gpu:
    description: GPU-intensive vision processing and dream world services
    agents:
      - VisionProcessingAgent
      - DreamWorldAgent
      - DreamingModeAgent
  utility_cpu:
    description: Support utilities and miscellaneous helpers
    agents:
      - UnifiedUtilsAgent
      - FileSystemAssistantAgent
      - RemoteConnectorAgent
      - AuthenticationAgent
      - AgentTrustScorer
      - ProactiveContextMonitor
  web_interface:
    description: User-facing web interface agents
    agents:
      - UnifiedWebAgent
# -----------------------------------------------------------------------------
