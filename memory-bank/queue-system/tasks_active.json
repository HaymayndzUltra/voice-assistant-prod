[
  {
    "id": "20240521_docker_optimization_plan",
    "description": "Isang detalyadong plano para sa pag-optimize ng Docker images, pagbabawas ng laki, at pagpapabuti ng build times sa anim na pangunahing serbisyo.",
    "todos": [
      {
        "text": "PHASE 1: Pagsusuri at Pag-optimize ng 'coordination' Image\n\nBATAYAN: Ang 'coordination' image ang unang target para sa aktwal na pagpapatupad ng optimization.\n\nKASALUKUYANG PROBLEMA:\n• Base image: nvidia/cuda:12.3.0-runtime-ubuntu22.04 (≈2.3 GB)\n• Nag-iinstall ng buong build chain (gcc, g++, build-essential) na naiiwan sa final image (≈600 MB).\n• Single-stage build, walang pagtatapon ng build tools.\n• PyTorch + TorchVision + Torchaudio ay naka-install kahit 'torch' lang ang kailangan (≈1 GB na dagdag).\n• Walang .dockerignore, kaya buong repo (≈300 MB) ang context.\n\nMUNGKAHING SOLUSYON:\n1. Gumawa ng `docker/coordination/minimal-requirements.txt`:\n```\ntorch==2.2.2+cu121 --extra-index-url https://download.pytorch.org/whl/cu121\nfastapi==0.111.0\nuvicorn==0.30.0\npyyaml==6.0.1\npyzmq==26.0.3\npydantic==2.7.1\nredis==5.0.4\nnats-py==2.3.1\naiohttp==3.9.5\nprometheus-client==0.20.0\nstructlog==24.1.0\nrich==13.7.1\n```\n\n2. Gumawa ng multi-stage `Dockerfile`:\n```dockerfile\n# ------------ builder ------------\nFROM nvidia/cuda:12.3.0-runtime-debian12 AS builder\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        python3 python3-pip python3-dev \\\n        && rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade pip\n\nCOPY docker/coordination/minimal-requirements.txt /tmp/req.txt\nRUN pip install --no-cache-dir -r /tmp/req.txt\n\n# ------------ runtime ------------\nFROM nvidia/cuda:12.3.0-runtime-debian12\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONPATH=/app \\\n    LOG_LEVEL=INFO\n\nCOPY --from=builder /usr/local/lib/python3.*/site-packages /usr/local/lib/python3.*/site-packages\nCOPY main_pc_code/  /app/main_pc_code/\nCOPY common/        /app/common/\nCOPY common_utils/  /app/common_utils/\n\nWORKDIR /app\nCMD [\"python3\", \"-m\", \"main_pc_code.agents.request_coordinator\"]\n```\n\n3. Magdagdag ng `.dockerignore`.\n\nINAASAHANG RESULTA:\n• Laki ng Image: 12.8 GB → ~3.8 GB (≈70% pagbaba)\n• Oras ng Build: -45%\n\n──────────────────────────────────\nMAHALAGANG PAALALA: Ito ang unang aktwal na pagpapatupad ng optimization. Siguraduhing matagumpay ang build, health-check, at GPU visibility test (`torch.cuda.is_available()`) bago magpatuloy sa susunod na image. Ang tagumpay dito ang magiging basehan para sa lahat ng kasunod na serbisyo.",
        "done": false
      },
      {
        "text": "PHASE 2: Pag-optimize ng 'speech_gpu' Image (10.6 GB)\n\nKASALUKUYANG PROBLEMA:\n• Base image: python:3.10-slim (CPU-only), kahit na ang pangalan ay 'GPU'.\n• Nag-iiwan ng buong build chain at audio dev libraries (ffmpeg, libasound2-dev) sa final image (≈600 MB).\n• Maraming magkakapatong na audio libraries (soundfile, librosa, pydub, etc.) at dalawang 'Whisper' library.\n• Walang .dockerignore.\n\nAKSYON:\n1. Gumawa ng `docker/speech_gpu/minimal-requirements.txt`:\n```\n# Core\npyzmq==26.0.3\nredis==5.0.4\naiohttp==3.9.5\npyyaml==6.0.1\nprometheus-client==0.20.0\nstructlog==24.1.0\nrich==13.7.1\npsutil==5.9.8\nnats-py==2.6.0\n\n# Audio / ML\nnumpy==1.26.4\ntorch==2.2.2+cu121 --extra-index-url https://download.pytorch.org/whl/cu121\ntorchaudio==2.2.2+cu121\nsoundfile==0.12.1\npydub==0.25.1\nwhisper==1.1.10\n```\n\n2. Gumawa ng `optimized_dockerfiles/speech_gpu/Dockerfile`:\n```dockerfile\n# ---------- builder ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12 AS builder\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        python3 python3-pip python3-dev build-essential \\\n        libsndfile1-dev ffmpeg && \\\n    rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade pip\nCOPY docker/speech_gpu/minimal-requirements.txt /tmp/req.txt\nRUN pip install --no-cache-dir -r /tmp/req.txt\n\n# ---------- runtime ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12\nENV PYTHONUNBUFFERED=1 PYTHONPATH=/app\nCOPY --from=builder /usr/local/lib/python3.*/site-packages /usr/local/lib/python3.*/site-packages\nCOPY main_pc_code/  /app/main_pc_code/\nCOPY common/        /app/common/\nCOPY common_utils/  /app/common_utils/\nWORKDIR /app\nCMD [\"python3\", \"-m\", \"main_pc_code.agents.streaming_tts_agent\"]\n```\n\n3. Gumawa ng `.dockerignore`:\n```\n.git\n**/*.ipynb\ntests/\ndocs/\n*.md\n```\n\nINAASAHANG RESULTA:\n• Laki ng Image: 10.6 GB → ~4 GB (≈62% pagbaba)\n• GPU Ready: `torch.cuda.is_available()` -> True\n\n──────────────────────────────────\nMAHALAGANG PAALALA: Kritikal dito ang paglipat mula sa CPU-only patungo sa GPU-enabled base image. Pagkatapos ng build, kumpirmahin na ang `torch.cuda.is_available()` ay nagbabalik ng 'True' at magsagawa ng audio I/O smoke test upang matiyak na gumagana nang tama ang audio processing sa GPU.",
        "done": false
      },
      {
        "text": "PHASE 3: Pag-optimize ng 'vision_gpu' Image (10.1 GB)\n\nKASALUKUYANG PROBLEMA:\n• Base image: python:3.10-slim (CPU-only).\n• Malalaking wheels: `opencv-python` (may GUI), `insightface` (may kasamang lahat ng models), `onnxruntime` (CPU build), `scikit-learn` (hindi ginagamit).\n• Single-stage build at walang .dockerignore.\n\nAKSYON:\n1. Gumawa ng `docker/vision_gpu/minimal-requirements.txt`:\n```\npyzmq==26.0.3\nredis==5.0.4\naiohttp==3.9.5\npydantic==2.7.1\npyyaml==6.0.1\nprometheus-client==0.20.0\nrich==13.7.1\nstructlog==24.1.0\npsutil==5.9.8\nnats-py==2.6.0\nnumpy==1.26.4\n\n# Vision stack\nopencv-python-headless==4.9.0.80\nPillow==10.3.0\ntorch==2.2.2+cu121 --extra-index-url https://download.pytorch.org/whl/cu121\ninsightface==0.7.3\nonnxruntime-gpu==1.17.1\nfilterpy==1.4.5\n```\n\n2. Gumawa ng `optimized_dockerfiles/vision_gpu/Dockerfile`:\n```dockerfile\n# ---------- builder ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12 AS builder\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        python3 python3-pip python3-dev build-essential \\\n        libgl1-mesa-glx libglib2.0-0 && \\\n    rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade pip\nCOPY docker/vision_gpu/minimal-requirements.txt /tmp/req.txt\nRUN pip install --no-cache-dir -r /tmp/req.txt\n\n# ---------- runtime ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12\nENV PYTHONUNBUFFERED=1 PYTHONPATH=/app LOG_LEVEL=INFO\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libgl1-mesa-glx libglib2.0-0 && \\\n    rm -rf /var/lib/apt/lists/*\nCOPY --from=builder /usr/local/lib/python3.*/site-packages /usr/local/lib/python3.*/site-packages\nCOPY main_pc_code/  /app/main_pc_code/\nCOPY common/        /app/common/\nCOPY common_utils/  /app/common_utils/\nWORKDIR /app\nCMD [\"python3\", \"-m\", \"main_pc_code.agents.face_recognition_agent\"]\n```\n\n3. I-update ang `.dockerignore`.\n\nINAASAHANG RESULTA:\n• Laki ng Image: 10.1 GB → ≈4.2 GB (59% pagbaba)\n• GPU Enabled: `torch.cuda.is_available()` -> True\n\n──────────────────────────────────\nMAHALAGANG PAALALA: Tulad ng speech_gpu, tiyaking gumagana ang CUDA. Bigyang-pansin ang pagbabago sa 'insightface' kung saan dina-download na ang modelo sa unang run. I-verify na ang prosesong ito ay matagumpay at hindi nagdudulot ng error sa pagsisimula ng container.",
        "done": false
      },
      {
        "text": "PHASE 4: Pag-optimize ng 'learning_gpu' Image (9.8 GB)\n\nKASALUKUYANG PROBLEMA:\n• Base image: python:3.10-slim (CPU-only).\n• Mga hindi ginagamit na malalaking libraries: `torchvision`, `scikit-learn`, `scipy`.\n• Single-stage build at walang .dockerignore.\n\nAKSYON:\n1. Gumawa ng `docker/learning_gpu/minimal-requirements.txt`:\n```\n# Core infra\npyzmq==26.0.3\nredis==5.0.4\naiohttp==3.9.5\npydantic==2.7.1\npyyaml==6.0.1\nprometheus-client==0.20.0\nstructlog==24.1.0\nrich==13.7.1\npsutil==5.9.8\nnats-py==2.6.0\n\n# ML / training stack\ntorch==2.2.2+cu121 --extra-index-url https://download.pytorch.org/whl/cu121\ntransformers==4.42.0\ndatasets==2.19.0\naccelerate==0.30.1\ntensorboard==2.16.2\noptuna==3.6.1\npandas==2.3.1\njsonlines==4.0.0\nnumpy==1.26.4\nhuggingface-hub==0.34.3\nsafetensors==0.5.3\n```\n\n2. Gumawa ng `optimized_dockerfiles/learning_gpu/Dockerfile`:\n```dockerfile\n# ---------- builder ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12 AS builder\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        python3 python3-pip python3-dev build-essential git curl \\\n        && rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade pip\nCOPY docker/learning_gpu/minimal-requirements.txt /tmp/req.txt\nRUN pip install --no-cache-dir -r /tmp/req.txt\n\n# ---------- runtime ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12\nENV PYTHONUNBUFFERED=1 PYTHONPATH=/app LOG_LEVEL=INFO\nCOPY --from=builder /usr/local/lib/python3.*/site-packages /usr/local/lib/python3.*/site-packages\nCOPY main_pc_code/  /app/main_pc_code/\nCOPY common/        /app/common/\nCOPY common_utils/  /app/common_utils/\nWORKDIR /app\nCMD [\"python3\", \"-m\", \"main_pc_code.agents.training_manager\"]\n```\n\n3. I-update ang `.dockerignore`.\n\nINAASAHANG RESULTA:\n• Laki ng Image: 9.8 GB → ≈4.5 GB (54% pagbaba)\n\n──────────────────────────────────\nMAHALAGANG PAALALA: Ang imaheng ito ay para sa training. Pagkatapos alisin ang mga dependency tulad ng scikit-learn at torchvision, mahalagang patakbuhin ang mga unit test o smoke test na nagpapatunay na ang mga training-specific na tool (tulad ng `transformers`, `datasets`, `accelerate`) ay gumagana pa rin nang maayos.",
        "done": false
      },
      {
        "text": "PHASE 5: Pag-optimize ng 'reasoning_gpu' Image (9.49 GB)\n\nKASALUKUYANG PROBLEMA:\n• Base image: python:3.10-slim (CPU-only).\n• Hindi ginagamit na dependency: `scikit-learn`.\n• Single-stage build at walang .dockerignore.\n\nAKSYON:\n1. Gumawa ng `docker/reasoning_gpu/minimal-requirements.txt`:\n```\n# Core infra\npyzmq==26.0.3\nredis==5.0.4\naiohttp==3.9.5\npydantic==2.7.1\npyyaml==6.0.1\nprometheus-client==0.20.0\nrich==13.7.1\nstructlog==24.1.0\npsutil==5.9.8\nnats-py==2.6.0\ncolorlog==6.9.0\n\n# ML / reasoning stack\ntorch==2.2.2+cu121 --extra-index-url https://download.pytorch.org/whl/cu121\ntransformers==4.42.0\ndatasets==2.19.0\naccelerate==0.30.1\nnumpy==1.26.4\nnetworkx==3.4.2\njsonlines==4.0.0\n```\n\n2. Gumawa ng `optimized_dockerfiles/reasoning_gpu/Dockerfile`:\n```dockerfile\n# ---------- builder ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12 AS builder\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        python3 python3-pip python3-dev build-essential curl \\\n        && rm -rf /var/lib/apt/lists/*\nRUN python3 -m pip install --upgrade pip\nCOPY docker/reasoning_gpu/minimal-requirements.txt /tmp/req.txt\nRUN pip install --no-cache-dir -r /tmp/req.txt\n\n# ---------- runtime ----------\nFROM nvidia/cuda:12.3.0-runtime-debian12\nENV PYTHONUNBUFFERED=1 PYTHONPATH=/app LOG_LEVEL=INFO\nCOPY --from=builder /usr/local/lib/python3.*/site-packages /usr/local/lib/python3.*/site-packages\nCOPY main_pc_code/  /app/main_pc_code/\nCOPY common/        /app/common/\nCOPY common_utils/  /app/common_utils/\nCOPY remote_api_adapter/ /app/remote_api_adapter/\nWORKDIR /app\nCMD [\"python3\", \"-m\", \"main_pc_code.agents.responder\"]\n```\n\n3. I-update ang `.dockerignore`.\n\nINAASAHANG RESULTA:\n• Laki ng Image: 9.49 GB → ≈4.3 GB (≈55% pagbaba)\n\n──────────────────────────────────\nMAHALAGANG PAALALA: Ito ang huling malaking imahe sa Phase-1 audit. Siguraduhing matagumpay ang build at health checks. Ang pagkumpleto nito ay nangangahulugang tapos na ang indibidwal na pag-optimize at handa na para sa pangkalahatang validation.",
        "done": false
      },
      {
        "text": "PHASE 6: Finalization, System-wide Validation, at Documentation\n\nBUOD NG PHASE 1 AUDIT:\n• Kabuuang natipid na espasyo: ~44 GB\n  - translation_services: ≈8.4 GB\n  - coordination: ≈9.0 GB\n  - speech_gpu: ≈6.6 GB\n  - vision_gpu: ≈5.9 GB\n  - learning_gpu: ≈5.3 GB\n  - reasoning_gpu: ≈5.2 GB\n\nMGA SUSUNOD NA HAKBANG:\n1. I-commit ang lahat ng na-optimize na Dockerfiles, minimal requirements, at .dockerignore files.\n2. I-build ang lahat ng anim na images at kolektahin ang before/after na sukat at build-time metrics.\n3. Patakbuhin ang buong health-check suite at GPU smoke tests para sa lahat ng serbisyo.\n4. Simulan ang optimization cycle para sa mga natitirang medium/small images.\n5. Ihanda ang kumpletong dokumentasyon:\n   - `docker_optimization_complete_report.md`\n   - `size_comparison_before_after.md`\n6. Magbigay ng automation scripts:\n   - `optimize_all_docker_groups.sh`\n   - `rollback_docker_optimization.sh`\n\n──────────────────────────────────\nMAHALAGANG PAALALA: Ito ang huling yugto. Bago i-commit ang lahat ng pagbabago, magsagawa ng isang kumpletong system-wide test kung saan tumatakbo nang sabay-sabay ang lahat ng na-optimize na serbisyo. Tiyaking walang regressions. Ang paggawa ng documentation at rollback scripts ay kritikal para sa pangmatagalang maintenance at kaligtasan ng proyekto.",
        "done": false
      }
    ],
    "status": "in_progress",
    "created": "2024-05-21T10:00:00Z",
    "updated": "2024-05-21T10:00:00Z"
  }
]