[
  {
    "id": "migrate_pc2_agents_to_individual_containers",
    "description": "Action plan to migrate PC-2 agents from grouped Docker Compose files to individual, containerized services, enhancing the existing migration framework.",
    "todos": [
      {
        "text": "PHASE 0: SETUP & PROTOCOL (READ FIRST)\n\n**Explanations:**\nThis initial step contains the user manual for this task plan. It outlines the commands to interact with the plan and the critical safety workflow that must be followed for all subsequent phases.\n\n**Technical Artifacts:**\n**HOW TO USE THIS TASK PLAN (COMMANDS & PROTOCOL)**\n\n**I. COMMANDS:**\n1.  **TO VIEW DETAILS:** `python3 todo_manager.py show migrate_pc2_agents_to_individual_containers`\n2.  **TO MARK AS DONE:** `python3 todo_manager.py done migrate_pc2_agents_to_individual_containers <step_number>`\n\n**II. WORKFLOW & SAFETY PROTOCOL (CRUCIAL):**\n1.  **FOCUS ON CURRENT STEP:** In each Phase, always read and understand the `IMPORTANT NOTE` first.\n2.  **REVIEW-CONFIRM-PROCEED LOOP:** After completing a Phase, review your work and the next Phase. If your confidence score is below 90%, REPEAT the review.\n\n──────────────────────────────────\nIMPORTANT NOTE: This phase contains the operating manual for the entire plan. Understanding these protocols is mandatory before proceeding to Phase 1. Do not proceed until the current step is complete. Before moving forward, review the completed step and the next one. Repeat the review if your confidence score is below 90%.",
        "done": false
      },
      {
        "text": "PHASE 1: PC-2 Scoping & Information Extraction\n\n**Explanations:**\nThis phase focuses on gathering all necessary information for the PC-2 agent migration. First, validate the existence of all PC-2 specific `docker-compose.yml` files. Then, for each confirmed PC-2 agent, extract its configuration and Python import requirements, paying close attention to PC-2 specific paths and conventions.\n\n**Technical Artifacts / Tasks:**\n**1. Validate PC-2 Source Compose Files:**\n- `/workspace/docker/pc2_infra_core/docker-compose.yml`\n- `/workspace/docker/pc2_async_pipeline/docker-compose.yml`\n- `/workspace/docker/pc2_memory_stack/docker-compose.yml`\n- `/workspace/docker/pc2_utility_suite/docker-compose.yml`\n- `/workspace/docker/pc2_tutoring_cpu/docker-compose.yml`\n- `/workspace/docker/pc2_vision_dream_gpu/docker-compose.yml`\n- `/workspace/docker/pc2_web_interface/docker-compose.yml`\n\n**2. Extract Configuration for PC-2 Agents (Deduplicate List):**\n- `observability_hub`, `resource_manager`, `infrastructure_monitor`, `service_coordinator`, `health_aggregator`\n- `async_processor`, `tiered_responder`, `task_scheduler`, `pipeline_coordinator`, `workflow_manager`\n- `unified_memory_reasoning_agent`, `memory_orchestrator_service`, `unified_memory_reasoning_agent_simplified`, `memory_scheduler`, `cache_manager`\n- `health_monitor`, `performance_monitor`, `monitor_web_ports`, `utility_coordinator`\n- `custom_tutoring_test`, `tutor_agent`, `tutoring_agent`, `tutoring_service_agent`, `test_tutoring_feature`\n- `test_dreamworld_updates`, `vision_processor`, `dream_generator`, `image_handler`\n- `unified_web_agent`, `rollback_web_ports`, `test_web_connections`, `web_interface_manager`\n\n**3. Extract PC-2 Python Requirements:**\n- Use existing script patterns found in `/workspace/docker/pc2_*/generate_requirements_*.py`.\n- The scripts must scan the correct agent source code path: `/workspace/pc2_code/agents/AGENT_NAME.py`.\n\n──────────────────────────────────\nIMPORTANT NOTE: Ensure the agent list is deduplicated as some agents like `task_scheduler` and `monitor_web_ports` may appear in multiple groups. All paths and code references must use the `pc2_` prefix. Do not proceed until the current step is complete. Before moving forward, review the completed step and the next one. Repeat the review if your confidence score is below 90%.",
        "done": false
      },
      {
        "text": "PHASE 2: PC-2 Structure and Template Definition\n\n**Explanations:**\nDefine the standardized structure and Dockerfile template for each new individual PC-2 agent service. This ensures consistency and correctly references PC-2 specific code paths.\n\n**Technical Artifacts / Tasks:**\n**1. Define Individual PC-2 Agent Directory Structure:**\nFor each unique PC-2 agent, the following directory structure must be created:\n```\n/workspace/docker/pc2_AGENT_NAME/\n├── Dockerfile\n├── requirements.txt\n└── docker-compose.yml (individual)\n```\n\n**2. Define Universal PC-2 Dockerfile Template:**\nThe `Dockerfile` in each `pc2_AGENT_NAME` directory must use this exact template. Note the `COPY pc2_code` and `CMD` path.\n```dockerfile\nFROM python:3.10-slim\nRUN apt-get update && apt-get install -y --no-install-recommends curl gcc build-essential && rm -rf /var/lib/apt/lists/*\nCOPY requirements.txt /tmp/\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\nCOPY pc2_code /app/pc2_code\nCOPY common /app/common\nCOPY common_utils /app/common_utils\nWORKDIR /app\nENV PYTHONPATH=/app\nHEALTHCHECK CMD curl -f http://localhost:${HEALTH_PORT}/health || exit 1\nCMD [\"python\", \"-m\", \"pc2_code.agents.AGENT_NAME\"]\n```\n\n──────────────────────────────────\nIMPORTANT NOTE: The use of the `pc2_` prefix in directory names and the correct paths within the Dockerfile (`pc2_code`) are critical. Do not modify the template. Do not proceed until the current step is complete. Before moving forward, review the completed step and the next one. Repeat the review if your confidence score is below 90%.",
        "done": false
      },
      {
        "text": "PHASE 3: Automation Script Enhancement for PC-2\n\n**Explanations:**\nUpdate the existing migration script to handle the specific requirements of the PC-2 migration. This involves adding logic to differentiate between Main-PC and PC-2 agents.\n\n**Technical Artifacts / Tasks:**\n**1. Enhance the Main Migration Script:**\n-   **File to Modify:** `/workspace/scripts/migrate_to_individual_containers.py`\n\n**2. Required Script Logic Enhancements:**\n-   Add functionality to process the list of PC-2 agents.\n-   When processing a PC-2 agent, the script must:\n    -   Create directories with the `pc2_AGENT_NAME` prefix.\n    -   Use the PC-2 Dockerfile template.\n    -   Add a new section to `/workspace/docker-compose.individual.yml` under a comment: `# PC-2 Individual Agents`.\n    -   Prefix service names in the compose file (e.g., `pc2_observability_hub`).\n    -   Assign ports from the designated PC-2 range (8000-9000) to avoid conflicts.\n    -   Inject the `PC2_ENVIRONMENT=true` environment variable into each PC-2 service definition.\n\n──────────────────────────────────\nIMPORTANT NOTE: This script modification is critical. The logic must correctly partition Main-PC and PC-2 agents to prevent configuration conflicts, especially with port mapping and environment variables. Do not proceed until the current step is complete. Before moving forward, review the completed step and the next one. Repeat the review if your confidence score is below 90%.",
        "done": false
      },
      {
        "text": "PHASE 4: PC-2 Migration Execution and Pilot Testing\n\n**Explanations:**\nExecute the enhanced migration script to generate the PC-2 artifacts. Then, conduct a focused pilot test on a small group of critical PC-2 agents to validate the entire process before a full build.\n\n**Technical Artifacts / Tasks:**\n**1. Run the Enhanced Migration Script:**\nExecute the updated script:\n```bash\npython3 /workspace/scripts/migrate_to_individual_containers.py\n```\nVerify that it generates the ~25 `pc2_AGENT_NAME` directories and adds the PC-2 section to `docker-compose.individual.yml`.\n\n**2. Create PC-2 Specific Build Script:**\n- **File Path:** `/workspace/build_pc2_individual_agents.sh`\n- **Content:** This script should build only the PC-2 services.\n  ```bash\n  #!/bin/bash\n  # Builds all individual PC-2 agent services\n  docker-compose -f /workspace/docker-compose.individual.yml build $(docker-compose -f /workspace/docker-compose.individual.yml config --services | grep '^pc2_')\n  ```\n\n**3. Build and Test PC-2 Pilot Agents:**\nUsing the updated `docker-compose.individual.yml`, build and run only the following PC-2 services to confirm correct operation:\n-   `pc2_observability_hub` (Stable, monitored service)\n-   `pc2_resource_manager` (Core infrastructure service)\n-   `pc2_async_processor` (Pipeline critical path)\n\nExample command to build and test a single PC-2 service:\n```bash\ndocker-compose -f /workspace/docker-compose.individual.yml up --build -d pc2_async_processor\n```\n\n──────────────────────────────────\nIMPORTANT NOTE: The pilot test is crucial for validating the PC-2 specific configurations, such as the `PC2_ENVIRONMENT` variable and the new port range. Thoroughly debug any issues before proceeding to a full build. Do not proceed until the current step is complete. Before moving forward, review the completed step and the next one. Repeat the review if your confidence score is below 90%.",
        "done": false
      },
      {
        "text": "PHASE 5: Finalization, Full PC-2 Build, and Combined Reporting\n\n**Explanations:**\nWith the PC-2 migration process validated, complete the final deliverables. This includes executing a full build of all new PC-2 services and creating a combined report that covers both Main-PC and PC-2 migrations.\n\n**Technical Artifacts / Tasks:**\n**1. Execute Full PC-2 Build:**\nRun the new build script to compile all individual PC-2 agent images.\n```bash\nchmod +x /workspace/build_pc2_individual_agents.sh\n./workspace/build_pc2_individual_agents.sh\n```\n\n**2. Final Deliverables Check:**\nConfirm all required PC-2 items are present and correct:\n-   ~25 individual `docker/pc2_AGENT_NAME/` directories.\n-   Updated `/workspace/docker-compose.individual.yml` with a distinct PC-2 section.\n-   Enhanced `/workspace/scripts/migrate_to_individual_containers.py` supporting PC-2.\n-   New `/workspace/build_pc2_individual_agents.sh` script.\n\n**3. Create Combined Validation Report:**\n-   Generate a single report that documents the migration of both Main-PC and PC-2 agents.\n-   Include sections for each platform, detailing the agents migrated, the structures created, and the validation steps performed.\n-   This report serves as the final sign-off for the entire individual containerization effort.\n\n──────────────────────────────────\nIMPORTANT NOTE: The final report should clearly distinguish between the Main-PC and PC-2 migrations while presenting a unified overview of the project's success. This completes the full migration task. Do not proceed until the current step is complete. Before moving forward, review the completed step and the next one. Repeat the review if your confidence score is below 90%.",
        "done": false
      }
    ],
    "status": "in_progress",
    "created": "2024-05-24T12:10:00Z",
    "updated": "2024-05-24T12:10:00Z"
  }
]