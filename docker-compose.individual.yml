version: '3.8'

# Master Docker Compose file for all individually containerized agents
# Generated by the agent migration automation script

networks:
  ai_system_network:
    driver: bridge

services:
  # Infrastructure Services
  redis:
    image: redis:7.2-alpine
    container_name: redis_main
    ports:
      - "6379:6379"
    networks:
      - ai_system_network
    restart: unless-stopped

  nats:
    image: nats:2.10-alpine
    container_name: nats_main
    ports:
      - "4222:4222"
    networks:
      - ai_system_network
    restart: unless-stopped

  # Core Infrastructure Agents
  service_registry:
    build: ./docker/service_registry
    image: service_registry:latest
    container_name: service_registry
    ports:
      - "7200:7200"
      - "8200:8200"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  system_digital_twin:
    build: ./docker/system_digital_twin
    image: system_digital_twin:latest
    container_name: system_digital_twin
    ports:
      - "7220:7220"
      - "8220:8220"
    depends_on:
      - service_registry
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  # Coordination Layer
  request_coordinator:
    build: ./docker/request_coordinator
    image: request_coordinator:latest
    container_name: request_coordinator
    ports:
      - "26002:26002"
      - "27002:27002"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  model_manager_suite_coordination:
    build: ./docker/model_manager_suite_coordination
    image: model_manager_suite_coordination:latest
    container_name: model_manager_suite_coordination
    depends_on:
      - request_coordinator
      - redis
    networks:
      - ai_system_network
    restart: unless-stopped

  vram_optimizer:
    build: ./docker/vram_optimizer
    image: vram_optimizer:latest
    container_name: vram_optimizer
    depends_on:
      - request_coordinator
    networks:
      - ai_system_network
    restart: unless-stopped

  # Memory Stack
  memory_client:
    build: ./docker/memory_client
    image: memory_client:latest
    container_name: memory_client
    ports:
      - "5715:5715"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  session_memory_agent:
    build: ./docker/session_memory_agent
    image: session_memory_agent:latest
    container_name: session_memory_agent
    depends_on:
      - memory_client
    networks:
      - ai_system_network
    restart: unless-stopped

  knowledge_base:
    build: ./docker/knowledge_base
    image: knowledge_base:latest
    container_name: knowledge_base
    depends_on:
      - memory_client
    networks:
      - ai_system_network
    restart: unless-stopped

  # Language Stack
  nlu_agent:
    build: ./docker/nlu_agent
    image: nlu_agent:latest
    container_name: nlu_agent
    ports:
      - "5585:5585"
      - "6585:6585"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  intention_validator:
    build: ./docker/intention_validator
    image: intention_validator:latest
    container_name: intention_validator
    ports:
      - "5586:5586"
      - "6586:6586"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  advanced_command_handler:
    build: ./docker/advanced_command_handler
    image: advanced_command_handler:latest
    container_name: advanced_command_handler
    ports:
      - "5587:5587"
      - "6587:6587"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  chitchat_agent:
    build: ./docker/chitchat_agent
    image: chitchat_agent:latest
    container_name: chitchat_agent
    ports:
      - "5588:5588"
      - "6588:6588"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  feedback_handler:
    build: ./docker/feedback_handler
    image: feedback_handler:latest
    container_name: feedback_handler
    ports:
      - "5589:5589"
      - "6589:6589"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  responder:
    build: ./docker/responder
    image: responder:latest
    container_name: responder
    ports:
      - "5598:5598"
      - "6598:6598"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  dynamic_identity_agent:
    build: ./docker/dynamic_identity_agent
    image: dynamic_identity_agent:latest
    container_name: dynamic_identity_agent
    ports:
      - "5591:5591"
      - "6591:6591"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  emotion_synthesis_agent:
    build: ./docker/emotion_synthesis_agent
    image: emotion_synthesis_agent:latest
    container_name: emotion_synthesis_agent
    ports:
      - "5592:5592"
      - "6592:6592"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  goal_manager:
    build: ./docker/goal_manager
    image: goal_manager:latest
    container_name: goal_manager
    ports:
      - "5593:5593"
      - "6593:6593"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  model_orchestrator:
    build: ./docker/model_orchestrator
    image: model_orchestrator:latest
    container_name: model_orchestrator
    ports:
      - "5594:5594"
      - "6594:6594"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  proactive_agent:
    build: ./docker/proactive_agent
    image: proactive_agent:latest
    container_name: proactive_agent
    ports:
      - "5595:5595"
      - "6595:6595"
    depends_on:
      - nlu_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  model_manager_suite:
    build: ./docker/model_manager_suite
    image: model_manager_suite:latest
    container_name: model_manager_suite
    ports:
      - "5570:5570"
      - "6570:6570"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  # Reasoning Stack
  chain_of_thought_agent:
    build: ./docker/chain_of_thought_agent
    image: chain_of_thought_agent:latest
    container_name: chain_of_thought_agent
    ports:
      - "5612:5612"
      - "6612:6612"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  cognitive_model_agent:
    build: ./docker/cognitive_model_agent
    image: cognitive_model_agent:latest
    container_name: cognitive_model_agent
    ports:
      - "5641:5641"
      - "6641:6641"
    depends_on:
      - chain_of_thought_agent
    networks:
      - ai_system_network
    restart: unless-stopped

  # Learning Stack
  learning_manager:
    build: ./docker/learning_manager
    image: learning_manager:latest
    container_name: learning_manager
    ports:
      - "5562:5562"
      - "6562:6562"
    depends_on:
      - redis
    networks:
      - ai_system_network
    restart: unless-stopped

  learning_orchestration_service:
    build: ./docker/learning_orchestration_service
    image: learning_orchestration_service:latest
    container_name: learning_orchestration_service
    ports:
      - "5563:5563"
      - "6563:6563"
    depends_on:
      - redis
    networks:
      - ai_system_network
    restart: unless-stopped

  learning_opportunity_detector:
    build: ./docker/learning_opportunity_detector
    image: learning_opportunity_detector:latest
    container_name: learning_opportunity_detector
    ports:
      - "5564:5564"
      - "6564:6564"
    depends_on:
      - redis
    networks:
      - ai_system_network
    restart: unless-stopped

  active_learning_monitor:
    build: ./docker/active_learning_monitor
    image: active_learning_monitor:latest
    container_name: active_learning_monitor
    ports:
      - "5565:5565"
      - "6565:6565"
    depends_on:
      - redis
    networks:
      - ai_system_network
    restart: unless-stopped

  # Vision Stack
  face_recognition_agent:
    build: ./docker/face_recognition_agent
    image: face_recognition_agent:latest
    container_name: face_recognition_agent
    ports:
      - "5596:5596"
      - "6596:6596"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  # Speech Stack
  stt_service:
    build: ./docker/stt_service
    image: stt_service:latest
    container_name: stt_service
    ports:
      - "5551:5551"
      - "6551:6551"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  tts_service:
    build: ./docker/tts_service
    image: tts_service:latest
    container_name: tts_service
    ports:
      - "5552:5552"
      - "6552:6552"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  audio_capture:
    build: ./docker/audio_capture
    image: audio_capture:latest
    container_name: audio_capture
    ports:
      - "5553:5553"
      - "6553:6553"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  fused_audio_preprocessor:
    build: ./docker/fused_audio_preprocessor
    image: fused_audio_preprocessor:latest
    container_name: fused_audio_preprocessor
    ports:
      - "5554:5554"
      - "6554:6554"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  streaming_speech_recognition:
    build: ./docker/streaming_speech_recognition
    image: streaming_speech_recognition:latest
    container_name: streaming_speech_recognition
    ports:
      - "5555:5555"
      - "6555:6555"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  streaming_tts_agent:
    build: ./docker/streaming_tts_agent
    image: streaming_tts_agent:latest
    container_name: streaming_tts_agent
    ports:
      - "5556:5556"
      - "6556:6556"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  wake_word_detector:
    build: ./docker/wake_word_detector
    image: wake_word_detector:latest
    container_name: wake_word_detector
    ports:
      - "5557:5557"
      - "6557:6557"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  streaming_interrupt_handler:
    build: ./docker/streaming_interrupt_handler
    image: streaming_interrupt_handler:latest
    container_name: streaming_interrupt_handler
    ports:
      - "5558:5558"
      - "6558:6558"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  streaming_language_analyzer:
    build: ./docker/streaming_language_analyzer
    image: streaming_language_analyzer:latest
    container_name: streaming_language_analyzer
    ports:
      - "5559:5559"
      - "6559:6559"
    depends_on:
      - stt_service
    networks:
      - ai_system_network
    restart: unless-stopped

  # Translation Services
  cloud_translation_service:
    build: ./docker/cloud_translation_service
    image: cloud_translation_service:latest
    container_name: cloud_translation_service
    ports:
      - "5584:5584"
      - "6584:6584"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  # Emotion System
  emotion_engine:
    build: ./docker/emotion_engine
    image: emotion_engine:latest
    container_name: emotion_engine
    ports:
      - "5590:5590"
      - "6590:6590"
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  mood_tracker:
    build: ./docker/mood_tracker
    image: mood_tracker:latest
    container_name: mood_tracker
    depends_on:
      - emotion_engine
    networks:
      - ai_system_network
    restart: unless-stopped

  human_awareness:
    build: ./docker/human_awareness
    image: human_awareness:latest
    container_name: human_awareness
    depends_on:
      - emotion_engine
    networks:
      - ai_system_network
    restart: unless-stopped

  tone_detector:
    build: ./docker/tone_detector
    image: tone_detector:latest
    container_name: tone_detector
    depends_on:
      - emotion_engine
    networks:
      - ai_system_network
    restart: unless-stopped

  voice_profiling:
    build: ./docker/voice_profiling
    image: voice_profiling:latest
    container_name: voice_profiling
    depends_on:
      - emotion_engine
    networks:
      - ai_system_network
    restart: unless-stopped

  empathy_agent:
    build: ./docker/empathy_agent
    image: empathy_agent:latest
    container_name: empathy_agent
    depends_on:
      - emotion_engine
    networks:
      - ai_system_network
    restart: unless-stopped

  # Utility Services
  code_generator:
    build: ./docker/code_generator
    image: code_generator:latest
    container_name: code_generator
    depends_on:
      - redis
      - nats
    networks:
      - ai_system_network
    restart: unless-stopped

  executor:
    build: ./docker/executor
    image: executor:latest
    container_name: executor
    depends_on:
      - code_generator
    networks:
      - ai_system_network
    restart: unless-stopped

  predictive_health_monitor:
    build: ./docker/predictive_health_monitor
    image: predictive_health_monitor:latest
    container_name: predictive_health_monitor
    depends_on:
      - code_generator
    networks:
      - ai_system_network
    restart: unless-stopped

  translation_service:
    build: ./docker/translation_service
    image: translation_service:latest
    container_name: translation_service
    ports:
      - "5597:5597"
      - "6597:6597"
    depends_on:
      - code_generator
    networks:
      - ai_system_network
    restart: unless-stopped

  smart_home_agent:
    build: ./docker/smart_home_agent
    image: smart_home_agent:latest
    container_name: smart_home_agent
    ports:
      - "7125:7125"
      - "8125:8125"
    depends_on:
      - code_generator
    networks:
      - ai_system_network
    restart: unless-stopped

  # Observability
  observability_hub:
    build: ./docker/observability_hub
    image: observability_hub:latest
    container_name: observability_hub
    ports:
      - "9000:9000"
    depends_on:
      - redis
    networks:
      - ai_system_network
    restart: unless-stopped