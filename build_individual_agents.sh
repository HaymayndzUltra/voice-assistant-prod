#!/bin/bash

# Build script for all individual agent containers
# Generated by the agent migration automation script

set -e  # Exit on any error

echo "üöÄ Starting build process for all individual agents..."
echo "======================================================="

WORKSPACE_ROOT="/workspace"
DOCKER_DIR="$WORKSPACE_ROOT/docker"
BUILD_LOG="$WORKSPACE_ROOT/build.log"

# Initialize counters
total_agents=0
successful_builds=0
failed_builds=0
failed_agents=()

# Clear previous build log
> "$BUILD_LOG"

echo "Build started at: $(date)" | tee -a "$BUILD_LOG"
echo "Docker directory: $DOCKER_DIR" | tee -a "$BUILD_LOG"
echo "" | tee -a "$BUILD_LOG"

# Check if Docker is available
if ! command -v docker &> /dev/null; then
    echo "‚ùå ERROR: Docker is not installed or not in PATH" | tee -a "$BUILD_LOG"
    exit 1
fi

# Check if Docker daemon is running
if ! docker info &> /dev/null; then
    echo "‚ùå ERROR: Docker daemon is not running" | tee -a "$BUILD_LOG"
    exit 1
fi

echo "‚úÖ Docker is available and running" | tee -a "$BUILD_LOG"
echo "" | tee -a "$BUILD_LOG"

# Find all agent directories
if [ ! -d "$DOCKER_DIR" ]; then
    echo "‚ùå ERROR: Docker directory not found: $DOCKER_DIR" | tee -a "$BUILD_LOG"
    exit 1
fi

# Get list of agent directories
agent_dirs=($(find "$DOCKER_DIR" -maxdepth 1 -type d -not -path "$DOCKER_DIR" | sort))

if [ ${#agent_dirs[@]} -eq 0 ]; then
    echo "‚ùå ERROR: No agent directories found in $DOCKER_DIR" | tee -a "$BUILD_LOG"
    exit 1
fi

echo "Found ${#agent_dirs[@]} agent directories to build" | tee -a "$BUILD_LOG"
echo "" | tee -a "$BUILD_LOG"

# Build each agent
for agent_dir in "${agent_dirs[@]}"; do
    agent_name=$(basename "$agent_dir")
    total_agents=$((total_agents + 1))
    
    echo "[$total_agents/${#agent_dirs[@]}] Building $agent_name..." | tee -a "$BUILD_LOG"
    
    # Check if Dockerfile exists
    if [ ! -f "$agent_dir/Dockerfile" ]; then
        echo "  ‚ùå SKIP: No Dockerfile found in $agent_dir" | tee -a "$BUILD_LOG"
        failed_builds=$((failed_builds + 1))
        failed_agents+=("$agent_name (no Dockerfile)")
        continue
    fi
    
    # Change to agent directory for build context
    cd "$agent_dir"
    
    # Build the Docker image
    echo "  üî® Building image: $agent_name:latest" | tee -a "$BUILD_LOG"
    
    if docker build -t "$agent_name:latest" . >> "$BUILD_LOG" 2>&1; then
        echo "  ‚úÖ SUCCESS: $agent_name built successfully" | tee -a "$BUILD_LOG"
        successful_builds=$((successful_builds + 1))
        
        # Get image size
        image_size=$(docker images --format "table {{.Size}}" "$agent_name:latest" | tail -n 1)
        echo "  üìè Image size: $image_size" | tee -a "$BUILD_LOG"
        
    else
        echo "  ‚ùå FAILED: $agent_name build failed" | tee -a "$BUILD_LOG"
        failed_builds=$((failed_builds + 1))
        failed_agents+=("$agent_name")
    fi
    
    echo "" | tee -a "$BUILD_LOG"
done

# Return to workspace root
cd "$WORKSPACE_ROOT"

# Print summary
echo "=======================================================" | tee -a "$BUILD_LOG"
echo "üèÅ Build process completed at: $(date)" | tee -a "$BUILD_LOG"
echo "" | tee -a "$BUILD_LOG"
echo "üìä SUMMARY:" | tee -a "$BUILD_LOG"
echo "  Total agents: $total_agents" | tee -a "$BUILD_LOG"
echo "  Successful builds: $successful_builds" | tee -a "$BUILD_LOG"
echo "  Failed builds: $failed_builds" | tee -a "$BUILD_LOG"
echo "" | tee -a "$BUILD_LOG"

if [ $failed_builds -gt 0 ]; then
    echo "‚ùå FAILED AGENTS:" | tee -a "$BUILD_LOG"
    for failed_agent in "${failed_agents[@]}"; do
        echo "  - $failed_agent" | tee -a "$BUILD_LOG"
    done
    echo "" | tee -a "$BUILD_LOG"
fi

if [ $failed_builds -eq 0 ]; then
    echo "üéâ ALL AGENTS BUILT SUCCESSFULLY!" | tee -a "$BUILD_LOG"
    exit 0
else
    echo "‚ö†Ô∏è  BUILD COMPLETED WITH ERRORS" | tee -a "$BUILD_LOG"
    echo "   See $BUILD_LOG for detailed build logs" | tee -a "$BUILD_LOG"
    exit 1
fi