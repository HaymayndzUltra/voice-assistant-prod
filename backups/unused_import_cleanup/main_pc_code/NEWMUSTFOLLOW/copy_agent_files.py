#!/usr/bin/env python3

"""
Agent File Copier
----------------
Copies all required agent files to the NEWMUSTFOLLOW directory
"""

import os
import sys
import yaml
import shutil
from pathlib import Path

# ANSI color codes for terminal output
GREEN = "\033[92m"
RED = "\033[91m"
YELLOW = "\033[93m"
BLUE = "\033[94m"
RESET = "\033[0m"
BOLD = "\033[1m"

# Get the directory where the script is located
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
PROJECT_ROOT = os.path.abspath(os.path.join(SCRIPT_DIR, "..", ".."))
TARGET_DIR = os.path.join(SCRIPT_DIR, "agents")

def load_config():
    """Load the MVS configuration with updated file paths."""
    config_path = os.path.join(SCRIPT_DIR, "minimal_system_config_updated.yaml")
    if not os.path.exists(config_path):
        print(f"{RED}Error: Could not find {config_path}{RESET}")
        sys.exit(1)
        
    try:
        with open(config_path, 'r') as f:
            config = yaml.safe_load(f)
        return config
    except Exception as e:
        print(f"{RED}Error loading config: {e}{RESET}")
        sys.exit(1)

def ensure_directory(directory):
    """Ensure a directory exists."""
    if not os.path.exists(directory):
        try:
            os.makedirs(directory)
            print(f"{GREEN}Created directory: {directory}{RESET}")
        except Exception as e:
            print(f"{RED}Error creating directory {directory}: {e}{RESET}")
            sys.exit(1)

def copy_file(source, target_dir):
    """Copy a file to the target directory."""
    if not os.path.exists(source):
        print(f"{RED}Source file not found: {source}{RESET}")
        return False
    
    filename = os.path.basename(source)
    target = os.path.join(target_dir, filename)
    
    try:
        shutil.copy2(source, target)
        print(f"{GREEN}Copied: {filename}{RESET}")
        return True
    except Exception as e:
        print(f"{RED}Error copying {source} to {target}: {e}{RESET}")
        return False

def create_init_file(directory):
    """Create an __init__.py file in the directory."""
    init_file = os.path.join(directory, "__init__.py")
    try:
        with open(init_file, 'w') as f:
            f.write("# This file is automatically generated\n")
        print(f"{GREEN}Created: {init_file}{RESET}")
        return True
    except Exception as e:
        print(f"{RED}Error creating {init_file}: {e}{RESET}")
        return False

def update_config_with_local_paths(config):
    """Update the configuration to use local paths."""
    updated_config = {
        'core_agents': [],
        'dependencies': []
    }
    
    # Update core agents
    for agent in config.get('core_agents', []):
        agent_copy = agent.copy()
        if 'file_path' in agent_copy:
            agent_copy['file_path'] = os.path.basename(agent_copy['file_path'])
        updated_config['core_agents'].append(agent_copy)
    
    # Update dependencies
    for agent in config.get('dependencies', []):
        agent_copy = agent.copy()
        if 'file_path' in agent_copy:
            agent_copy['file_path'] = os.path.basename(agent_copy['file_path'])
        updated_config['dependencies'].append(agent_copy)
    
    return updated_config

def main():
    """Main entry point."""
    print(f"{BLUE}{BOLD}Agent File Copier{RESET}")
    print(f"Target directory: {TARGET_DIR}\n")
    
    # Load the configuration
    config = load_config()
    
    # Ensure the target directory exists
    ensure_directory(TARGET_DIR)
    
    # Copy all agent files
    all_agents = []
    if 'core_agents' in config:
        all_agents.extend(config['core_agents'])
    if 'dependencies' in config:
        all_agents.extend(config['dependencies'])
    
    print(f"Copying {len(all_agents)} agent files...\n")
    
    success_count = 0
    failed_count = 0
    
    for agent in all_agents:
        name = agent.get('name', 'Unknown')
        file_path = agent.get('file_path')
        
        if not file_path:
            print(f"{YELLOW}No file path for agent: {name}{RESET}")
            failed_count += 1
            continue
        
        print(f"Agent: {BOLD}{name}{RESET}")
        success = copy_file(file_path, TARGET_DIR)
        if success:
            success_count += 1
        else:
            failed_count += 1
    
    # Create __init__.py file
    create_init_file(TARGET_DIR)
    
    # Create updated config with local paths
    updated_config = update_config_with_local_paths(config)
    local_config_path = os.path.join(SCRIPT_DIR, "minimal_system_config_local.yaml")
    try:
        with open(local_config_path, 'w') as f:
            yaml.dump(updated_config, f, default_flow_style=False)
        print(f"\n{GREEN}Created local config: {local_config_path}{RESET}")
    except Exception as e:
        print(f"\n{RED}Error creating local config: {e}{RESET}")
    
    # Print summary
    print(f"\n{BOLD}Summary:{RESET}")
    print(f"  Total agents: {len(all_agents)}")
    print(f"  {GREEN}Successfully copied: {success_count}{RESET}")
    print(f"  {RED}Failed: {failed_count}{RESET}")
    
    if failed_count == 0:
        print(f"\n{GREEN}{BOLD}All agent files copied successfully!{RESET}")
    else:
        print(f"\n{YELLOW}{BOLD}Some agent files could not be copied. Check the output for details.{RESET}")

if __name__ == "__main__":
    main() 