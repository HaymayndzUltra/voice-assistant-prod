"""Generated protobuf stub for ModelOps service (manual implementation)."""

# Manual stub implementation to address compilation issues
# In production, this would be generated by grpc_tools.protoc

from typing import Dict, Any, List


class InferenceRequest:
    """Inference request message."""
    
    def __init__(self, model_name: str = "", prompt: str = "", 
                 parameters: Dict[str, str] = None, max_tokens: int = 0, 
                 temperature: float = 0.0):
        self.model_name = model_name
        self.prompt = prompt
        self.parameters = parameters or {}
        self.max_tokens = max_tokens
        self.temperature = temperature


class InferenceResponse:
    """Inference response message."""
    
    def __init__(self, response_text: str = "", tokens_generated: int = 0,
                 inference_time_ms: float = 0.0, status: str = "",
                 error_message: str = ""):
        self.response_text = response_text
        self.tokens_generated = tokens_generated
        self.inference_time_ms = inference_time_ms
        self.status = status
        self.error_message = error_message


class ModelLoadRequest:
    """Model load request message."""
    
    def __init__(self, model_name: str = "", model_path: str = "",
                 load_params: Dict[str, str] = None, shards: int = 0):
        self.model_name = model_name
        self.model_path = model_path
        self.load_params = load_params or {}
        self.shards = shards


class ModelLoadReply:
    """Model load reply message."""
    
    def __init__(self, success: bool = False, message: str = "",
                 model_id: str = "", vram_used_mb: int = 0):
        self.success = success
        self.message = message
        self.model_id = model_id
        self.vram_used_mb = vram_used_mb


class ModelUnloadRequest:
    """Model unload request message."""
    
    def __init__(self, model_name: str = "", force: bool = False):
        self.model_name = model_name
        self.force = force


class ModelUnloadReply:
    """Model unload reply message."""
    
    def __init__(self, success: bool = False, message: str = "",
                 vram_freed_mb: int = 0):
        self.success = success
        self.message = message
        self.vram_freed_mb = vram_freed_mb


class ModelInfo:
    """Model info message."""
    
    def __init__(self, name: str = "", path: str = "", status: str = "",
                 vram_mb: int = 0, shards: int = 0, load_time: int = 0):
        self.name = name
        self.path = path
        self.status = status
        self.vram_mb = vram_mb
        self.shards = shards
        self.load_time = load_time


class ModelList:
    """Model list response message."""
    
    def __init__(self, models: List[ModelInfo] = None, total_count: int = 0,
                 total_vram_mb: int = 0):
        self.models = models or []
        self.total_count = total_count
        self.total_vram_mb = total_vram_mb