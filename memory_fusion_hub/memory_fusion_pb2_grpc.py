# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import memory_fusion_pb2 as memory__fusion__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in memory_fusion_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MemoryFusionServiceStub(object):
    """Memory Fusion Hub gRPC Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/memory_fusion.MemoryFusionService/Get',
                request_serializer=memory__fusion__pb2.GetRequest.SerializeToString,
                response_deserializer=memory__fusion__pb2.GetResponse.FromString,
                _registered_method=True)
        self.Put = channel.unary_unary(
                '/memory_fusion.MemoryFusionService/Put',
                request_serializer=memory__fusion__pb2.PutRequest.SerializeToString,
                response_deserializer=memory__fusion__pb2.PutResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/memory_fusion.MemoryFusionService/Delete',
                request_serializer=memory__fusion__pb2.DeleteRequest.SerializeToString,
                response_deserializer=memory__fusion__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.BatchGet = channel.unary_unary(
                '/memory_fusion.MemoryFusionService/BatchGet',
                request_serializer=memory__fusion__pb2.BatchGetRequest.SerializeToString,
                response_deserializer=memory__fusion__pb2.BatchGetResponse.FromString,
                _registered_method=True)
        self.Exists = channel.unary_unary(
                '/memory_fusion.MemoryFusionService/Exists',
                request_serializer=memory__fusion__pb2.ExistsRequest.SerializeToString,
                response_deserializer=memory__fusion__pb2.ExistsResponse.FromString,
                _registered_method=True)
        self.ListKeys = channel.unary_unary(
                '/memory_fusion.MemoryFusionService/ListKeys',
                request_serializer=memory__fusion__pb2.ListKeysRequest.SerializeToString,
                response_deserializer=memory__fusion__pb2.ListKeysResponse.FromString,
                _registered_method=True)
        self.GetHealth = channel.unary_unary(
                '/memory_fusion.MemoryFusionService/GetHealth',
                request_serializer=memory__fusion__pb2.HealthRequest.SerializeToString,
                response_deserializer=memory__fusion__pb2.HealthResponse.FromString,
                _registered_method=True)


class MemoryFusionServiceServicer(object):
    """Memory Fusion Hub gRPC Service Definition
    """

    def Get(self, request, context):
        """Get a single memory item by key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Store a memory item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete a memory item by key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGet(self, request, context):
        """Get multiple memory items in a single request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exists(self, request, context):
        """Check if a memory item exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListKeys(self, request, context):
        """List keys matching a prefix
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHealth(self, request, context):
        """Get service health status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MemoryFusionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=memory__fusion__pb2.GetRequest.FromString,
                    response_serializer=memory__fusion__pb2.GetResponse.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=memory__fusion__pb2.PutRequest.FromString,
                    response_serializer=memory__fusion__pb2.PutResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=memory__fusion__pb2.DeleteRequest.FromString,
                    response_serializer=memory__fusion__pb2.DeleteResponse.SerializeToString,
            ),
            'BatchGet': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGet,
                    request_deserializer=memory__fusion__pb2.BatchGetRequest.FromString,
                    response_serializer=memory__fusion__pb2.BatchGetResponse.SerializeToString,
            ),
            'Exists': grpc.unary_unary_rpc_method_handler(
                    servicer.Exists,
                    request_deserializer=memory__fusion__pb2.ExistsRequest.FromString,
                    response_serializer=memory__fusion__pb2.ExistsResponse.SerializeToString,
            ),
            'ListKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListKeys,
                    request_deserializer=memory__fusion__pb2.ListKeysRequest.FromString,
                    response_serializer=memory__fusion__pb2.ListKeysResponse.SerializeToString,
            ),
            'GetHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHealth,
                    request_deserializer=memory__fusion__pb2.HealthRequest.FromString,
                    response_serializer=memory__fusion__pb2.HealthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'memory_fusion.MemoryFusionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('memory_fusion.MemoryFusionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MemoryFusionService(object):
    """Memory Fusion Hub gRPC Service Definition
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/memory_fusion.MemoryFusionService/Get',
            memory__fusion__pb2.GetRequest.SerializeToString,
            memory__fusion__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/memory_fusion.MemoryFusionService/Put',
            memory__fusion__pb2.PutRequest.SerializeToString,
            memory__fusion__pb2.PutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/memory_fusion.MemoryFusionService/Delete',
            memory__fusion__pb2.DeleteRequest.SerializeToString,
            memory__fusion__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/memory_fusion.MemoryFusionService/BatchGet',
            memory__fusion__pb2.BatchGetRequest.SerializeToString,
            memory__fusion__pb2.BatchGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Exists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/memory_fusion.MemoryFusionService/Exists',
            memory__fusion__pb2.ExistsRequest.SerializeToString,
            memory__fusion__pb2.ExistsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/memory_fusion.MemoryFusionService/ListKeys',
            memory__fusion__pb2.ListKeysRequest.SerializeToString,
            memory__fusion__pb2.ListKeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/memory_fusion.MemoryFusionService/GetHealth',
            memory__fusion__pb2.HealthRequest.SerializeToString,
            memory__fusion__pb2.HealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
