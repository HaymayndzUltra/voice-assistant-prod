
from common.config_manager import get_service_ip, get_service_url, get_redis_url
# Health Integration Example for proactive_agent_interface
# Generated by WP-07 Health Unification

from common.health.unified_health import UnifiedHealthMixin

class ProactiveAgentInterface(UnifiedHealthMixin):
    """
    Enhanced proactive_agent_interface with unified health monitoring
    """
    
    def __init__(self, *args, **kwargs):
        # Initialize your agent normally
        super().__init__(*args, **kwargs)
        
        # Initialize health monitoring
        self.__init_health_monitoring__(health_check_port=0)
        
        # Add custom health metrics
        self.add_custom_metric("agent_type", "proactive_agent_interface")
        self.add_custom_metric("initialization_time", time.time())
        
        # Add dependency checks (customize for your agent)
        # self.add_dependency_check("database", self._check_database_connection)
        # self.add_dependency_check("external_api", self._check_external_api)
    
    def _check_database_connection(self) -> bool:
        """Example dependency check for database"""
        try:
            # Add your database check logic here
            return True
        except:
            return False
    
    def _check_external_api(self) -> bool:
        """Example dependency check for external API"""
        try:
            # Add your API check logic here
            return True
        except:
            return False
    
    # Override any existing health methods to use unified system
    def health_check(self):
        """Unified health check endpoint"""
        return self.get_health_status()
    
    def detailed_health(self):
        """Detailed health check endpoint"""
        return self.get_detailed_health_status()

# Usage example:
if __name__ == "__main__":
    agent = ProactiveAgentInterface()
    
    # Your agent logic here
    
    # Health monitoring runs automatically in background
    # Access via: tcp://localhost:0
