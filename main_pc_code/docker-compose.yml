version: '3.8'
services:
  taskrouter:
    build: .
    container_name: main_pc_taskrouter
    command:
    - python
    - src/core/task_router.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 8570:8570
  chainofthoughtagent:
    build: .
    container_name: main_pc_chainofthoughtagent
    command:
    - python
    - FORMAINPC/ChainOfThoughtAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5612:5612
  got_totagent:
    build: .
    container_name: main_pc_got_totagent
    command:
    - python
    - FORMAINPC/GOT_TOTAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5646:5646
  modelmanageragent:
    build: .
    container_name: main_pc_modelmanageragent
    command:
    - python
    - agents/model_manager_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5570:5570
  goalorchestratoragent:
    build: .
    container_name: main_pc_goalorchestratoragent
    command:
    - python
    - agents/GoalOrchestratorAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 7001:7001
  intentionvalidatoragent:
    build: .
    container_name: main_pc_intentionvalidatoragent
    command:
    - python
    - agents/IntentionValidatorAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5701:5701
  dynamicidentityagent:
    build: .
    container_name: main_pc_dynamicidentityagent
    command:
    - python
    - agents/DynamicIdentityAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5802:5802
  empathyagent:
    build: .
    container_name: main_pc_empathyagent
    command:
    - python
    - agents/EmpathyAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5703:5703
  proactiveagent:
    build: .
    container_name: main_pc_proactiveagent
    command:
    - python
    - agents/ProactiveAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5624:5624
  predictiveloader:
    build: .
    container_name: main_pc_predictiveloader
    command:
    - python
    - agents/predictive_loader.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5617:5617
  enhancedmodelrouter:
    build: .
    container_name: main_pc_enhancedmodelrouter
    command:
    - python
    - FORMAINPC/EnhancedModelRouter.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5598:5598
  tinyllamaservice:
    build: .
    container_name: main_pc_tinyllamaservice
    command:
    - python
    - FORMAINPC/TinyLlamaServiceEnhanced.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5615:5615
  nllbadapter:
    build: .
    container_name: main_pc_nllbadapter
    command:
    - python
    - FORMAINPC/NLLBAdapter.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5581:5581
  learningadjusteragent:
    build: .
    container_name: main_pc_learningadjusteragent
    command:
    - python
    - FORMAINPC/LearningAdjusterAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5643:5643
  localfinetuneragent:
    build: .
    container_name: main_pc_localfinetuneragent
    command:
    - python
    - FORMAINPC/LocalFineTunerAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5645:5645
  selftrainingorchestrator:
    build: .
    container_name: main_pc_selftrainingorchestrator
    command:
    - python
    - FORMAINPC/SelfTrainingOrchestrator.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5644:5644
  cognitivemodelagent:
    build: .
    container_name: main_pc_cognitivemodelagent
    command:
    - python
    - FORMAINPC/CognitiveModelAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5641:5641
  consolidatedtranslator:
    build: .
    container_name: main_pc_consolidatedtranslator
    command:
    - python
    - FORMAINPC/consolidated_translator.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5563:5563
  emotionengine:
    build: .
    container_name: main_pc_emotionengine
    command:
    - python
    - agents/emotion_engine.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5575:5575
  moodtrackeragent:
    build: .
    container_name: main_pc_moodtrackeragent
    command:
    - python
    - agents/mood_tracker_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5704:5704
  humanawarenessagent:
    build: .
    container_name: main_pc_humanawarenessagent
    command:
    - python
    - agents/human_awareness_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5705:5705
  emotionsynthesisagent:
    build: .
    container_name: main_pc_emotionsynthesisagent
    command:
    - python
    - agents/emotion_synthesis_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5706:5706
  tonedetector:
    build: .
    container_name: main_pc_tonedetector
    command:
    - python
    - agents/tone_detector.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5625:5625
  voiceprofiler:
    build: .
    container_name: main_pc_voiceprofiler
    command:
    - python
    - agents/voice_profiling_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5708:5708
  nluagent:
    build: .
    container_name: main_pc_nluagent
    command:
    - python
    - agents/nlu_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5709:5709
  advancedcommandhandler:
    build: .
    container_name: main_pc_advancedcommandhandler
    command:
    - python
    - agents/advanced_command_handler.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5710:5710
  chitchatagent:
    build: .
    container_name: main_pc_chitchatagent
    command:
    - python
    - agents/chitchat_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5711:5711
  feedbackhandler:
    build: .
    container_name: main_pc_feedbackhandler
    command:
    - python
    - agents/feedback_handler.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5636:5636
  responder:
    build: .
    container_name: main_pc_responder
    command:
    - python
    - agents/responder.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5637:5637
  sessionmemoryagent:
    build: .
    container_name: main_pc_sessionmemoryagent
    command:
    - python
    - agents/session_memory_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5572:5572
  memorymanager:
    build: .
    container_name: main_pc_memorymanager
    command:
    - python
    - agents/memory_manager.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5712:5712
  memoryorchestrator:
    build: .
    container_name: main_pc_memoryorchestrator
    command:
    - python
    - src/memory/memory_orchestrator.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5576:5576
  memoryclient:
    build: .
    container_name: main_pc_memoryclient
    command:
    - python
    - src/memory/memory_client.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5577:5577
  learningmanager:
    build: .
    container_name: main_pc_learningmanager
    command:
    - python
    - agents/learning_manager.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5579:5579
  knowledgebase:
    build: .
    container_name: main_pc_knowledgebase
    command:
    - python
    - agents/knowledge_base.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5578:5578
  metacognitionagent:
    build: .
    container_name: main_pc_metacognitionagent
    command:
    - python
    - agents/MetaCognitionAgent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5630:5630
  activelearningmonitor:
    build: .
    container_name: main_pc_activelearningmonitor
    command:
    - python
    - agents/active_learning_monitor.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5638:5638
  unifiedplanningagent:
    build: .
    container_name: main_pc_unifiedplanningagent
    command:
    - python
    - agents/unified_planning_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5634:5634
  multiagentswarmmanager:
    build: .
    container_name: main_pc_multiagentswarmmanager
    command:
    - python
    - agents/MultiAgentSwarmManager.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5639:5639
  unifiedsystemagent:
    build: .
    container_name: main_pc_unifiedsystemagent
    command:
    - python
    - agents/unified_system_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5640:5640
  ttsconnector:
    build: .
    container_name: main_pc_ttsconnector
    command:
    - python
    - agents/tts_connector.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5582:5582
  ttscache:
    build: .
    container_name: main_pc_ttscache
    command:
    - python
    - agents/tts_cache.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5628:5628
  streamingttsagent:
    build: .
    container_name: main_pc_streamingttsagent
    command:
    - python
    - agents/streaming_tts_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5562:5562
  codegenerator:
    build: .
    container_name: main_pc_codegenerator
    command:
    - python
    - agents/code_generator_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5604:5604
  executor:
    build: .
    container_name: main_pc_executor
    command:
    - python
    - agents/executor.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5606:5606
  audiocapture:
    build: .
    container_name: main_pc_audiocapture
    command:
    - python
    - agents/streaming_audio_capture.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 6575:6575
  fusedaudiopreprocessor:
    build: .
    container_name: main_pc_fusedaudiopreprocessor
    command:
    - python
    - src/audio/fused_audio_preprocessor.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 6578:6578
  wakeworddetector:
    build: .
    container_name: main_pc_wakeworddetector
    command:
    - python
    - agents/wake_word_detector.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 6577:6577
  streamingspeechrecognition:
    build: .
    container_name: main_pc_streamingspeechrecognition
    command:
    - python
    - agents/streaming_speech_recognition.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 6580:6580
  languageandtranslationcoordinator:
    build: .
    container_name: main_pc_languageandtranslationcoordinator
    command:
    - python
    - agents/language_and_translation_coordinator.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 6581:6581
  visioncaptureagent:
    build: .
    container_name: main_pc_visioncaptureagent
    command:
    - python
    - src/vision/vision_capture_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5592:5592
  facerecognitionagent:
    build: .
    container_name: main_pc_facerecognitionagent
    command:
    - python
    - agents/face_recognition_agent.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5610:5610
  predictivehealthmonitor:
    build: .
    container_name: main_pc_predictivehealthmonitor
    command:
    - python
    - agents/predictive_health_monitor.py
    volumes:
    - ./config:/app/config
    - ./logs:/app/logs
    - ${MODELS_BASE_PATH}:/app/models
    env_file:
    - .env
    networks:
    - ai_system_network
    restart: unless-stopped
    ports:
    - 5613:5613
networks:
  ai_system_network:
    driver: bridge
