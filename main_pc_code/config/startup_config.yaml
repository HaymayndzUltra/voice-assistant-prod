global_settings:
  environment:
    PYTHONPATH: /app
    LOG_LEVEL: INFO
    DEBUG_MODE: 'false'
    ENABLE_METRICS: 'true'
    ENABLE_TRACING: 'true'
    ENABLE_DATA_OPTIMIZER: 'true'
    DATA_OPTIMIZER_METHOD: compressed_msgpack
    # Phase 1 Consolidation Flags - O3 Enhanced
    ENABLE_PHASE1_CONSOLIDATION: 'true'
    CORE_ORCHESTRATOR_MODE: 'unified'  # Options: unified, delegation, gradual
    ENABLE_O3_ENHANCEMENTS: 'true'    # Enable O3 specific features
    ENABLE_SQLITE_INTEGRATION: 'true'  # SQLite database features
    ENABLE_REDIS_CACHE: 'true'         # Redis caching
    ENABLE_LANGUAGE_ANALYSIS: 'true'   # Language analysis thread
    ENABLE_PRIORITY_CALCULATION: 'true' # Dynamic priority calculation
  resource_limits:
    cpu_percent: 80
    memory_mb: 2048
    max_threads: 8  # Increased for O3 threading
  volumes:
  - source: ./logs
    target: /app/logs
  - source: ./models
    target: /app/models
  - source: ./data
    target: /app/data
  - source: ./config
    target: /app/config
  - source: ./phase1_implementation/data
    target: /app/phase1_data  # Phase 1 data directory
  health_checks:
    interval_seconds: 30
    timeout_seconds: 10
    retries: 3
    start_period_seconds: 300
  network:
    name: ai_system_network
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.20.0.0/16

agent_groups:
  # ===================================================================
  # PHASE 1 CONSOLIDATED SERVICES - O3 ENHANCED
  # ===================================================================
  phase1_consolidated_services:
    CoreOrchestrator:
      script_path: phase1_implementation/consolidated_agents/core_orchestrator/core_orchestrator.py
      port: 7000
      health_check_port: 8000
      required: true
      dependencies: []
      config:
        enable_unified_registry: true
        enable_unified_twin: true
        enable_unified_coordinator: true
        enable_unified_system: true
        # O3 Enhanced Configuration
        sqlite_db_path: "phase1_implementation/data/core_orchestrator.db"
        redis_host: "localhost"
        redis_port: 6379
        redis_db: 1
        language_analysis_enabled: true
        priority_calculation_enabled: true
        circuit_breaker_threshold: 3
        circuit_breaker_timeout: 30
      environment:
        ENABLE_O3_ENHANCEMENTS: 'true'
        SQLITE_DB_PATH: '/app/phase1_data/core_orchestrator.db'
        REDIS_HOST: 'localhost'
        REDIS_PORT: '6379'
        REDIS_DB: '1'
      startup:
        order: 1
        wait_for_dependencies: false
      logging:
        level: INFO
        file: "phase1_implementation/logs/core_orchestrator.log"

    SecurityGateway:
      script_path: phase1_implementation/consolidated_agents/security_gateway/security_gateway.py
      port: 7005
      health_check_port: 8005
      required: true
      dependencies: [CoreOrchestrator]
      config:
        # O3 Enhanced Security
        enable_jwt_auth: true
        enable_trust_scoring: true
        enable_threat_detection: true
        jwt_secret_key: "phase1_security_key_change_in_production"
        session_timeout_minutes: 60
        trust_score_threshold: 0.7
      environment:
        ENABLE_JWT_AUTH: 'true'
        ENABLE_TRUST_SCORING: 'true'
        JWT_SECRET_KEY: 'phase1_security_key_change_in_production'
      startup:
        order: 4
        wait_for_dependencies: true
        dependency_timeout: 60
      logging:
        level: INFO
        file: "phase1_implementation/logs/security_gateway.log"

  # ===================================================================
  # LEGACY SERVICES (GRADUALLY DEPRECATED)
  # ===================================================================
  legacy_services:
    # These services will be gradually phased out as Phase 1 consolidation completes
    ServiceRegistry:
      script_path: main_pc_code/agents/service_registry_agent.py
      port: 7100
      health_check_port: 8100
      required: false  # Not required when Phase 1 is enabled
      dependencies: []
      config:
        deprecation_notice: "This service is being replaced by CoreOrchestrator"
        phase_out_date: "2025-02-01"
      environment:
        PHASE1_FALLBACK_MODE: 'true'
      startup:
        order: 100  # Start after Phase 1 services
        enabled: false  # Disabled when Phase 1 is enabled

    SystemDigitalTwin:
      script_path: main_pc_code/agents/system_digital_twin.py
      port: 7120
      health_check_port: 8120
      required: false  # Not required when Phase 1 is enabled
      dependencies: []
      config:
        deprecation_notice: "This service is being replaced by CoreOrchestrator"
        phase_out_date: "2025-02-01"
      environment:
        PHASE1_FALLBACK_MODE: 'true'
      startup:
        order: 101
        enabled: false  # Disabled when Phase 1 is enabled

    RequestCoordinator:
      script_path: main_pc_code/agents/request_coordinator.py
      port: 26002
      health_check_port: 26102
      required: false  # Not required when Phase 1 is enabled
      dependencies: []
      config:
        deprecation_notice: "This service is being replaced by CoreOrchestrator"
        phase_out_date: "2025-02-01"
      environment:
        PHASE1_FALLBACK_MODE: 'true'
      startup:
        order: 102
        enabled: false  # Disabled when Phase 1 is enabled

  # ===================================================================
  # ESSENTIAL MAINPC SERVICES (CONTINUE RUNNING)
  # ===================================================================
  essential_services:
    TranslationService:
      script_path: main_pc_code/agents/translation_service.py
      port: 5002
      health_check_port: 5102
      required: true
      dependencies: [CoreOrchestrator, ErrorBusSuite]
      config:
        enable_phase1_integration: true
        core_orchestrator_endpoint: "http://localhost:7000"
        error_bus_endpoint: "http://localhost:7003"
      startup:
        order: 10
        wait_for_dependencies: true
        dependency_timeout: 120

    VoiceProcessingPipeline:
      script_path: main_pc_code/agents/voice_processing_pipeline.py
      port: 5001
      health_check_port: 5101
      required: true
      dependencies: [CoreOrchestrator, ResourceManagerSuite]
      config:
        enable_phase1_integration: true
        resource_manager_endpoint: "http://localhost:7001"
      startup:
        order: 11
        wait_for_dependencies: true

    ModelOrchestrator:
      script_path: main_pc_code/agents/model_orchestrator.py
      port: 5003
      health_check_port: 5103
      required: true
      dependencies: [CoreOrchestrator, ResourceManagerSuite]
      config:
        enable_phase1_integration: true
        circuit_breaker_integration: true
      startup:
        order: 12
        wait_for_dependencies: true

# ===================================================================
# PHASE 1 SPECIFIC CONFIGURATIONS
# ===================================================================
phase1_config:
  deployment_mode: "production"  # Options: development, staging, production
  consolidation_level: "complete"  # Options: partial, gradual, complete
  migration_strategy: "blue_green"  # Options: rolling, blue_green, canary
  
  feature_flags:
    enable_o3_enhancements: true
    enable_sqlite_integration: true
    enable_redis_caching: true
    enable_prometheus_metrics: true
    enable_predictive_analytics: true
    enable_zmq_broadcasting: true
    enable_parallel_health_checks: true
    enable_circuit_breakers: true
    enable_priority_queues: true
    enable_language_analysis: true

  database_config:
    sqlite_base_path: "phase1_implementation/data"
    backup_interval_hours: 6
    cleanup_older_than_days: 30

  redis_config:
    host: "localhost"
    port: 6379
    database_assignments:
      core_orchestrator: 1
      resource_manager: 2
      error_bus: 3
      security_gateway: 4
      observability_hub: 5

  monitoring_config:
    health_check_interval: 30
    metrics_collection_interval: 60
    log_retention_days: 7
    alert_threshold_critical: 0.8
    alert_threshold_warning: 0.6

  performance_config:
    max_concurrent_requests: 100
    request_timeout_seconds: 30
    circuit_breaker_failure_threshold: 3
    circuit_breaker_recovery_timeout: 30
    priority_queue_max_size: 25
    thread_pool_max_workers: 8

# ===================================================================
# STARTUP ORCHESTRATION
# ===================================================================
startup_sequence:
  pre_start_checks:
    - check_phase1_directories
    - verify_sqlite_permissions
    - test_redis_connection
    - validate_configuration
    
  phase1_services_startup:
    - CoreOrchestrator          # Order 1 - Foundation service
    - ResourceManagerSuite      # Order 2 - Resource management
    - ErrorBusSuite            # Order 3 - Error handling
    - SecurityGateway          # Order 4 - Security layer
    
  essential_services_startup:
    - TranslationService       # Order 10 - Core functionality
    - VoiceProcessingPipeline  # Order 11 - Voice processing
    - ModelOrchestrator        # Order 12 - Model management
    
  post_start_verification:
    - verify_all_health_endpoints
    - test_inter_service_communication
    - validate_phase1_integration
    - run_smoke_tests

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging:
  global_level: INFO
  
  phase1_loggers:
    core_orchestrator:
      level: INFO
      file: "phase1_implementation/logs/core_orchestrator.log"
      rotation: "daily"
      retention: "7 days"
    
    resource_manager_suite:
      level: INFO
      file: "phase1_implementation/logs/resource_manager_suite.log"
      rotation: "daily"
      retention: "7 days"
    
    error_bus_suite:
      level: INFO
      file: "phase1_implementation/logs/error_bus_suite.log"
      rotation: "daily"
      retention: "7 days"
    
    security_gateway:
      level: INFO
      file: "phase1_implementation/logs/security_gateway.log"
      rotation: "daily"
      retention: "7 days"

  log_aggregation:
    enabled: true
    central_log_endpoint: "http://localhost:7002/logs"  # ObservabilityHub on PC2
    batch_size: 100
    flush_interval: 60

# ===================================================================
# HEALTH CHECK CONFIGURATION
# ===================================================================
health_checks:
  global_settings:
    interval_seconds: 30
    timeout_seconds: 10
    retries: 3
    start_period_seconds: 300
  
  phase1_specific:
    core_orchestrator:
      endpoint: "http://localhost:7000/health"
      critical: true
      
    resource_manager_suite:
      endpoint: "http://localhost:7001/health"
      critical: true
      
    error_bus_suite:
      endpoint: "http://localhost:7003/health"
      critical: true
      
    security_gateway:
      endpoint: "http://localhost:7005/health"
      critical: true

# ===================================================================
# MIGRATION AND ROLLBACK CONFIGURATION
# ===================================================================
migration:
  backup_before_migration: true
  backup_location: "phase1_implementation/backups"
  
  rollback_strategy:
    automatic_rollback_on_failure: true
    rollback_timeout_minutes: 10
    health_check_failures_threshold: 3
  
  legacy_service_deprecation:
    grace_period_days: 30
    warning_notifications: true
    forced_retirement_date: "2025-02-01"
