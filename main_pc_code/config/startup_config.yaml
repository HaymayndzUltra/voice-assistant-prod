global_settings:
  environment:
    PYTHONPATH: /app
    LOG_LEVEL: INFO
    DEBUG_MODE: 'false'
    ENABLE_METRICS: 'true'
    ENABLE_TRACING: 'true'
    ENABLE_DATA_OPTIMIZER: 'true'
    DATA_OPTIMIZER_METHOD: compressed_msgpack
    ENABLE_HYBRID_INFERENCE: 'true'
    HYBRID_QUALITY_THRESHOLD: '0.85'
  resource_limits:
    cpu_percent: 80
    memory_mb: 2048
    max_threads: 4
  health_checks:
    interval_seconds: 30
    timeout_seconds: 10
    retries: 3
  performance_tuning:
    dynamic_batch_tuning: true
    tuning_source: ObservabilityHub
    batch_optimization: true
    memory_optimization: true
    gpu_memory_fraction: 0.9

hybrid_inference_policy:
  strategy: local_first
  quality_check:
    method: score_threshold
    threshold: 0.85
    evaluation_model: gpt-3.5-turbo  # Model used for internal evaluation of local outputs
  local_backend:
    engine: llama_cpp
    gpu_device: RTX_4090
    models:
      text_generation:
        - name: phi-2
          path: models/phi-2.Q4_0.gguf
        - name: phi-3-mini-128k-instruct
          path: models/phi-3-mini-128k-instruct.gguf
      speech_to_text:
        - name: whisper-large-v3
          path: models/whisper-large-v3
      text_to_speech:
        - name: xtts-v2
          path: models/xtts-v2
  cloud_backends:
    - provider: openai
      model: gpt-4o
      api_key_env: OPENAI_API_KEY
    - provider: anthropic
      model: claude-3-opus
      api_key_env: ANTHROPIC_API_KEY
  log_fallbacks: true
  fallback_log_path: logs/cloud_fallbacks.log

agent_groups:
  foundation_services: &foundation
    ServiceRegistry:
      script_path: main_pc_code/agents/service_registry_agent.py
      port: "${PORT_OFFSET}+7200"
      health_check_port: "${PORT_OFFSET}+8200"
      required: true
      dependencies: []
      config:
        backend: memory  # Options: memory, redis
        redis:
          url: redis://localhost:6379/0
          prefix: "service_registry:"

      # For HA deployment with Redis backend, uncomment and adjust:
      # command_args: --backend redis --redis-url redis://redis:6379/0
    SystemDigitalTwin:
      script_path: main_pc_code/agents/system_digital_twin.py
      port: "${PORT_OFFSET}+7220"
      health_check_port: "${PORT_OFFSET}+8220"
      config:
        db_path: data/unified_memory.db
        redis:
          host: localhost
          port: "${PORT_OFFSET}+6379"
          db: 0
        zmq_request_timeout: 5000
      required: true
      dependencies:
        - ServiceRegistry
    RequestCoordinator:
      script_path: main_pc_code/agents/request_coordinator.py
      port: 26002
      health_check_port: 27002
      required: true
      dependencies:
      - SystemDigitalTwin
    ModelManagerSuite:
      script_path: main_pc_code/model_manager_suite.py
      port: "${PORT_OFFSET}+7211"
      health_check_port: "${PORT_OFFSET}+8211"
      required: true
      dependencies:
      - SystemDigitalTwin
      config:
        models_dir: models
        vram_budget_percentage: 80
        idle_timeout: 300
      hybrid_inference_policy_ref: global
    VRAMOptimizerAgent:
      script_path: main_pc_code/agents/vram_optimizer_agent.py
      port: "${PORT_OFFSET}+5572"
      health_check_port: "${PORT_OFFSET}+6572"
      required: true
      dependencies:
      - ModelManagerSuite
      - RequestCoordinator
      - SystemDigitalTwin
    ObservabilityHub:
      script_path: phase1_implementation/consolidated_agents/observability_hub/backup_observability_hub/observability_hub.py
      port: "${PORT_OFFSET}+9000"
      health_check_port: "${PORT_OFFSET}+9001"
      required: true
      dependencies:
      - SystemDigitalTwin
      config:
        prometheus_enabled: true
        parallel_health_checks: true
        prediction_enabled: true
        dynamic_batch_tuning: true
    ModelManagerSuite:
      script_path: main_pc_code/model_manager_suite.py
      port: "${PORT_OFFSET}+7211"
      health_check_port: "${PORT_OFFSET}+8211"
      required: true
      dependencies:
      - SystemDigitalTwin
      config:
        models_dir: models
        vram_budget_percentage: 80
        idle_timeout: 300
        hybrid_inference_policy_ref: global  # Enables the hybrid local-first, cloud-backed routing
  memory_system:
    MemoryClient:
      script_path: main_pc_code/agents/memory_client.py
      port: "${PORT_OFFSET}+5713"
      health_check_port: "${PORT_OFFSET}+6713"
      required: true
      dependencies:
      - SystemDigitalTwin
    SessionMemoryAgent:
      script_path: main_pc_code/agents/session_memory_agent.py
      port: "${PORT_OFFSET}+5574"
      health_check_port: "${PORT_OFFSET}+6574"
      required: true
      dependencies:
      - RequestCoordinator
      - SystemDigitalTwin
      - MemoryClient
    KnowledgeBase:
      script_path: main_pc_code/agents/knowledge_base.py
      port: "${PORT_OFFSET}+5715"
      health_check_port: "${PORT_OFFSET}+6715"
      required: true
      dependencies:
      - MemoryClient
      - SystemDigitalTwin
  utility_services:
    CodeGenerator:
      script_path: main_pc_code/agents/code_generator_agent.py
      port: "${PORT_OFFSET}+5650"
      health_check_port: "${PORT_OFFSET}+6650"
      required: true
      dependencies:
      - SystemDigitalTwin
      - ModelManagerSuite
    SelfTrainingOrchestrator:
      script_path: main_pc_code/FORMAINPC/SelfTrainingOrchestrator.py
      port: "${PORT_OFFSET}+5660"
      health_check_port: "${PORT_OFFSET}+6660"
      required: true
      dependencies:
      - SystemDigitalTwin
      - ModelManagerSuite
    PredictiveHealthMonitor:
      script_path: main_pc_code/agents/predictive_health_monitor.py
      port: "${PORT_OFFSET}+5613"
      health_check_port: "${PORT_OFFSET}+6613"
      required: true
      dependencies:
      - SystemDigitalTwin
    Executor:
      script_path: main_pc_code/agents/executor.py
      port: "${PORT_OFFSET}+5606"
      health_check_port: "${PORT_OFFSET}+6606"
      required: true
      dependencies:
      - CodeGenerator
      - SystemDigitalTwin
    TinyLlamaServiceEnhanced:
      script_path: main_pc_code/FORMAINPC/TinyLlamaServiceEnhanced.py
      port: "${PORT_OFFSET}+5615"
      health_check_port: "${PORT_OFFSET}+6615"
      required: false
      dependencies:
      - ModelManagerSuite
      - SystemDigitalTwin
    LocalFineTunerAgent:
      script_path: main_pc_code/FORMAINPC/LocalFineTunerAgent.py
      port: "${PORT_OFFSET}+5642"
      health_check_port: "${PORT_OFFSET}+6642"
      required: true
      dependencies:
      - SelfTrainingOrchestrator
      - SystemDigitalTwin
    NLLBAdapter:
      script_path: main_pc_code/FORMAINPC/NLLBAdapter.py
      port: "${PORT_OFFSET}+5582"
      health_check_port: "${PORT_OFFSET}+6582"
      required: true
      dependencies:
      - SystemDigitalTwin
  gpu_infrastructure:
    VRAMOptimizerAgent:
      script_path: main_pc_code/agents/vram_optimizer_agent.py
      port: "${PORT_OFFSET}+5572"
      health_check_port: "${PORT_OFFSET}+6572"
      required: true
      dependencies:
      - ModelManagerSuite
      - RequestCoordinator
      - SystemDigitalTwin
  reasoning_services:
    ChainOfThoughtAgent:
      script_path: main_pc_code/FORMAINPC/ChainOfThoughtAgent.py
      port: "${PORT_OFFSET}+5612"
      health_check_port: "${PORT_OFFSET}+6612"
      required: true
      dependencies:
      - ModelManagerSuite
      - SystemDigitalTwin
    GoTToTAgent:
      script_path: main_pc_code/FORMAINPC/GOT_TOTAgent.py
      port: "${PORT_OFFSET}+5646"
      health_check_port: "${PORT_OFFSET}+6646"
      required: false
      dependencies:
      - ModelManagerSuite
      - SystemDigitalTwin
      - ChainOfThoughtAgent
    CognitiveModelAgent:
      script_path: main_pc_code/FORMAINPC/CognitiveModelAgent.py
      port: "${PORT_OFFSET}+5641"
      health_check_port: "${PORT_OFFSET}+6641"
      required: false
      dependencies:
      - ChainOfThoughtAgent
      - SystemDigitalTwin
  vision_processing:
    FaceRecognitionAgent:
      script_path: main_pc_code/agents/face_recognition_agent.py
      port: "${PORT_OFFSET}+5610"
      health_check_port: "${PORT_OFFSET}+6610"
      required: true
      dependencies:
      - RequestCoordinator
      - ModelManagerSuite
      - SystemDigitalTwin
  learning_knowledge:
    LearningOrchestrationService:
      script_path: main_pc_code/agents/learning_orchestration_service.py
      port: "${PORT_OFFSET}+7210"
      health_check_port: "${PORT_OFFSET}+8212"
      required: true
      dependencies:
      - ModelManagerSuite
      - SystemDigitalTwin
    LearningOpportunityDetector:
      script_path: main_pc_code/agents/learning_opportunity_detector.py
      port: "${PORT_OFFSET}+7202"
      health_check_port: "${PORT_OFFSET}+8202"
      required: true
      dependencies:
      - LearningOrchestrationService
      - MemoryClient
      - SystemDigitalTwin
    LearningManager:
      script_path: main_pc_code/agents/learning_manager.py
      port: "${PORT_OFFSET}+5580"
      health_check_port: "${PORT_OFFSET}+6580"
      required: true
      dependencies:
      - MemoryClient
      - RequestCoordinator
      - SystemDigitalTwin
    ActiveLearningMonitor:
      script_path: main_pc_code/agents/active_learning_monitor.py
      port: "${PORT_OFFSET}+5638"
      health_check_port: "${PORT_OFFSET}+6638"
      required: true
      dependencies:
      - LearningManager
      - SystemDigitalTwin
    LearningAdjusterAgent:
      script_path: main_pc_code/FORMAINPC/LearningAdjusterAgent.py
      port: "${PORT_OFFSET}+5643"
      health_check_port: "${PORT_OFFSET}+6643"
      required: true
      dependencies:
      - SelfTrainingOrchestrator
      - SystemDigitalTwin
  language_processing:
    ModelOrchestrator:
      script_path: main_pc_code/agents/model_orchestrator.py
      port: "${PORT_OFFSET}+7213"
      health_check_port: "${PORT_OFFSET}+8213"
      required: true
      dependencies:
      - RequestCoordinator
      - ModelManagerSuite
      - SystemDigitalTwin
    GoalManager:
      script_path: main_pc_code/agents/goal_manager.py
      port: "${PORT_OFFSET}+7205"
      health_check_port: "${PORT_OFFSET}+8205"
      required: true
      dependencies:
      - RequestCoordinator
      - ModelOrchestrator
      - SystemDigitalTwin
      - MemoryClient
    IntentionValidatorAgent:
      script_path: main_pc_code/agents/IntentionValidatorAgent.py
      port: "${PORT_OFFSET}+5701"
      health_check_port: "${PORT_OFFSET}+6701"
      required: true
      dependencies:
      - RequestCoordinator
      - SystemDigitalTwin
    NLUAgent:
      script_path: main_pc_code/agents/nlu_agent.py
      port: "${PORT_OFFSET}+5709"
      health_check_port: "${PORT_OFFSET}+6709"
      required: true
      dependencies:
      - SystemDigitalTwin
    AdvancedCommandHandler:
      script_path: main_pc_code/agents/advanced_command_handler.py
      port: "${PORT_OFFSET}+5710"
      health_check_port: "${PORT_OFFSET}+6710"
      required: true
      dependencies:
      - NLUAgent
      - CodeGenerator
      - SystemDigitalTwin
    ChitchatAgent:
      script_path: main_pc_code/agents/chitchat_agent.py
      port: "${PORT_OFFSET}+5711"
      health_check_port: "${PORT_OFFSET}+6711"
      required: true
      dependencies:
      - NLUAgent
      - SystemDigitalTwin
    FeedbackHandler:
      script_path: main_pc_code/agents/feedback_handler.py
      port: "${PORT_OFFSET}+5636"
      health_check_port: "${PORT_OFFSET}+6636"
      required: true
      dependencies:
      - NLUAgent
      - SystemDigitalTwin
    Responder:
      script_path: main_pc_code/agents/responder.py
      port: "${PORT_OFFSET}+5637"
      health_check_port: "${PORT_OFFSET}+6637"
      required: true
      dependencies:
      - EmotionEngine
      - FaceRecognitionAgent
      - NLUAgent
      - StreamingTTSAgent
      - SystemDigitalTwin
      - TTSService
    DynamicIdentityAgent:
      script_path: main_pc_code/agents/DynamicIdentityAgent.py
      port: "${PORT_OFFSET}+5802"
      health_check_port: "${PORT_OFFSET}+6802"
      required: true
      dependencies:
      - RequestCoordinator
      - SystemDigitalTwin
    EmotionSynthesisAgent:
      script_path: main_pc_code/agents/emotion_synthesis_agent.py
      port: "${PORT_OFFSET}+5706"
      health_check_port: "${PORT_OFFSET}+6706"
      required: true
      dependencies:
      - RequestCoordinator
      - ModelManagerSuite
      - SystemDigitalTwin
  speech_services:
    STTService:
      script_path: main_pc_code/services/stt_service.py
      port: "${PORT_OFFSET}+5800"
      health_check_port: "${PORT_OFFSET}+6800"
      required: true
      dependencies:
      - ModelManagerSuite
      - SystemDigitalTwin
    TTSService:
      script_path: main_pc_code/services/tts_service.py
      port: "${PORT_OFFSET}+5801"
      health_check_port: "${PORT_OFFSET}+6801"
      required: true
      dependencies:
      - ModelManagerSuite
      - SystemDigitalTwin
  audio_interface:
    AudioCapture:
      script_path: main_pc_code/agents/streaming_audio_capture.py
      port: "${PORT_OFFSET}+6550"
      health_check_port: "${PORT_OFFSET}+7550"
      required: true
      dependencies:
      - SystemDigitalTwin
    FusedAudioPreprocessor:
      script_path: main_pc_code/agents/fused_audio_preprocessor.py
      port: "${PORT_OFFSET}+6551"
      health_check_port: "${PORT_OFFSET}+7551"
      required: true
      dependencies:
      - AudioCapture
      - SystemDigitalTwin
    StreamingInterruptHandler:
      script_path: main_pc_code/agents/streaming_interrupt_handler.py
      port: "${PORT_OFFSET}+5576"
      health_check_port: "${PORT_OFFSET}+6576"
      required: true
      dependencies:
      - StreamingSpeechRecognition
      - StreamingTTSAgent
      - SystemDigitalTwin
    StreamingSpeechRecognition:
      script_path: main_pc_code/agents/streaming_speech_recognition.py
      port: "${PORT_OFFSET}+6553"
      health_check_port: "${PORT_OFFSET}+7553"
      required: true
      dependencies:
      - FusedAudioPreprocessor
      - RequestCoordinator
      - STTService
      - SystemDigitalTwin
    StreamingTTSAgent:
      script_path: main_pc_code/agents/streaming_tts_agent.py
      port: "${PORT_OFFSET}+5562"
      health_check_port: "${PORT_OFFSET}+6562"
      required: true
      dependencies:
      - RequestCoordinator
      - TTSService
      - SystemDigitalTwin
      - UnifiedSystemAgent
    WakeWordDetector:
      script_path: main_pc_code/agents/wake_word_detector.py
      port: "${PORT_OFFSET}+6552"
      health_check_port: "${PORT_OFFSET}+7552"
      required: true
      dependencies:
      - AudioCapture
      - FusedAudioPreprocessor
      - SystemDigitalTwin
    StreamingLanguageAnalyzer:
      script_path: main_pc_code/agents/streaming_language_analyzer.py
      port: "${PORT_OFFSET}+5579"
      health_check_port: "${PORT_OFFSET}+6579"
      required: true
      dependencies:
      - StreamingSpeechRecognition
      - SystemDigitalTwin
      - TranslationService
    ProactiveAgent:
      script_path: main_pc_code/agents/ProactiveAgent.py
      port: "${PORT_OFFSET}+5624"
      health_check_port: "${PORT_OFFSET}+6624"
      required: true
      dependencies:
      - RequestCoordinator
      - SystemDigitalTwin
  emotion_system:
    EmotionEngine:
      script_path: main_pc_code/agents/emotion_engine.py
      port: "${PORT_OFFSET}+5590"
      health_check_port: "${PORT_OFFSET}+6590"
      required: true
      dependencies:
      - SystemDigitalTwin
    MoodTrackerAgent:
      script_path: main_pc_code/agents/mood_tracker_agent.py
      port: "${PORT_OFFSET}+5704"
      health_check_port: "${PORT_OFFSET}+6704"
      required: true
      dependencies:
      - EmotionEngine
      - SystemDigitalTwin
    HumanAwarenessAgent:
      script_path: main_pc_code/agents/human_awareness_agent.py
      port: "${PORT_OFFSET}+5705"
      health_check_port: "${PORT_OFFSET}+6705"
      required: true
      dependencies:
      - EmotionEngine
      - SystemDigitalTwin
    ToneDetector:
      script_path: main_pc_code/agents/tone_detector.py
      port: "${PORT_OFFSET}+5625"
      health_check_port: "${PORT_OFFSET}+6625"
      required: true
      dependencies:
      - EmotionEngine
      - SystemDigitalTwin
    VoiceProfilingAgent:
      script_path: main_pc_code/agents/voice_profiling_agent.py
      port: "${PORT_OFFSET}+5708"
      health_check_port: "${PORT_OFFSET}+6708"
      required: true
      dependencies:
      - EmotionEngine
      - SystemDigitalTwin
    EmpathyAgent:
      script_path: main_pc_code/agents/EmpathyAgent.py
      port: "${PORT_OFFSET}+5703"
      health_check_port: "${PORT_OFFSET}+6703"
      required: true
      dependencies:
      - EmotionEngine
      - StreamingTTSAgent
      - SystemDigitalTwin

  translation_services:
    TranslationService:
      script_path: main_pc_code/agents/translation_service.py
      port: "${PORT_OFFSET}+5595"
      health_check_port: "${PORT_OFFSET}+6595"
      required: true
      dependencies:
      - SystemDigitalTwin
    FixedStreamingTranslation:
      script_path: main_pc_code/agents/fixed_streaming_translation.py
      port: "${PORT_OFFSET}+5584"
      health_check_port: "${PORT_OFFSET}+6584"
      required: true
      dependencies:
      - ModelManagerSuite
      - SystemDigitalTwin
    NLLBAdapter:
      script_path: main_pc_code/FORMAINPC/NLLBAdapter.py
      port: "${PORT_OFFSET}+5581"
      health_check_port: "${PORT_OFFSET}+6581"
      required: true
      dependencies:
      - SystemDigitalTwin
