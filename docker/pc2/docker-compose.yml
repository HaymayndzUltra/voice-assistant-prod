version: '3.9'

services:
  # ==== Core Services ====
  core-services:
    build:
      context: ../../
      dockerfile: docker/pc2/Dockerfile
    image: ai-system-pc2:core
    container_name: ai-system-pc2-core
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - DEBUG_MODE=false
      - ENABLE_METRICS=true
      - ENABLE_TRACING=true
      - MAINPC_IP=192.168.100.10
    volumes:
      - ../../logs:/app/logs
      - ../../models:/app/models
      - ../../data:/app/data
      - ../../config:/app/config
      - ../../common:/app/common
    ports:
      - "7150:7150" # ErrorBus
      - "5700:5700" # MemoryOrchestratorService
    networks:
      - ai_system_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: 1
    command: >
      bash -c "python -m pc2_code.agents.error_bus.py & 
               python -m pc2_code.agents.memory_orchestrator_service.py &
               tail -f /dev/null"

  # ==== Translation Services ====
  translation-services:
    build:
      context: ../../
      dockerfile: docker/pc2/Dockerfile
    image: ai-system-pc2:translation
    container_name: ai-system-pc2-translation
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - MAINPC_IP=192.168.100.10
    volumes:
      - ../../logs:/app/logs
      - ../../models:/app/models
      - ../../data:/app/data
      - ../../config:/app/config
      - ../../common:/app/common
    ports:
      - "5581:5581" # NLLBTranslator
      - "5582:5582" # BergamotTranslator
    networks:
      - ai_system_network
    depends_on:
      - core-services
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: 1
    command: >
      bash -c "python -m pc2_code.translation_components.nllb_translator.py &
               tail -f /dev/null"

  # ==== Model Download Service ====
  model-download:
    build:
      context: ../../
      dockerfile: docker/pc2/Dockerfile
    image: ai-system-pc2:model-download
    container_name: ai-system-pc2-model-download
    restart: "no"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ../../models:/app/models
    networks:
      - ai_system_network
    command: >
      bash -c "mkdir -p /app/models &&
               cd /app/models &&
               # Download translation models
               python -c 'from transformers import AutoModelForSeq2SeqLM, AutoTokenizer; AutoModelForSeq2SeqLM.from_pretrained(\"facebook/nllb-200-distilled-600M\"); AutoTokenizer.from_pretrained(\"facebook/nllb-200-distilled-600M\")' &&
               python -c 'from transformers import AutoModelForSeq2SeqLM, AutoTokenizer; AutoModelForSeq2SeqLM.from_pretrained(\"facebook/nllb-200-distilled-1.3B\"); AutoTokenizer.from_pretrained(\"facebook/nllb-200-distilled-1.3B\")' &&
               
               # Download TinyLlama
               python -c 'from transformers import AutoModelForCausalLM, AutoTokenizer; AutoModelForCausalLM.from_pretrained(\"TinyLlama/TinyLlama-1.1B-Chat-v1.0\"); AutoTokenizer.from_pretrained(\"TinyLlama/TinyLlama-1.1B-Chat-v1.0\")' &&
               
               # Download Mistral-7B-Instruct 
               python -c 'from transformers import AutoModelForCausalLM, AutoTokenizer; AutoModelForCausalLM.from_pretrained(\"mistralai/Mistral-7B-Instruct-v0.2\"); AutoTokenizer.from_pretrained(\"mistralai/Mistral-7B-Instruct-v0.2\")'
               
               echo 'All models downloaded successfully'"

  # ==== Authentication & Security ====
  security-services:
    build:
      context: ../../
      dockerfile: docker/pc2/Dockerfile
    image: ai-system-pc2:security
    container_name: ai-system-pc2-security
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - MAINPC_IP=192.168.100.10
    volumes:
      - ../../logs:/app/logs
      - ../../data:/app/data
      - ../../config:/app/config
      - ../../certificates:/app/certificates
    ports:
      - "5702:5702" # AuthenticationAgent
    networks:
      - ai_system_network
    depends_on:
      - core-services
    command: >
      bash -c "python -m pc2_code.agents.ForPC2/AuthenticationAgent.py &
               tail -f /dev/null"

networks:
  ai_system_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16 