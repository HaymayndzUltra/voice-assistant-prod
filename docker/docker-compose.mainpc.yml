networks:
  default:
    driver: bridge
services:
  audio-interface:
    build:
      context: ..
      dockerfile: docker/Dockerfile.audio.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - speech-services
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - SERVICE_REGISTRY_HOST=core-services
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/audio-interface:optimized
    networks:
    - default
    ports:
    - 6550:6550
    - 6551:6551
    - 5576:5576
    - 6553:6553
    - 5562:5562
    - 6552:6552
    - 5579:5579
    - 5624:5624
    volumes:
    - logs:/app/logs
    - ./config:/app/config
  core-services:
    build:
      context: ..
      dockerfile: docker/gpu_base/Dockerfile.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - redis
    - nats
    deploy:
      resources:
        reservations:
          devices:
          - capabilities:
            - gpu
            count: 1
            driver: nvidia
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - LOG_LEVEL=INFO
    - DEBUG_MODE=false
    - ENABLE_METRICS=true
    - ENABLE_TRACING=true
    - SERVICE_REGISTRY_HOST=core-services
    - REDIS_HOST=redis
    - NATS_HOST=nats
    - MESH_DISABLED=true
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import zmq; ctx=zmq.Context(); s=ctx.socket(zmq.REQ); s.connect('tcp://${LOCALHOST:-localhost}:7220');
        s.send_string('health_check'); print('OK' if s.recv_string() else 'FAIL')
      timeout: 10s
    image: ai-system/core-services:optimized
    networks:
    - default
    ports:
    - 7200:7200
    - 7220:7220
    - 8220:8220
    - 26002:26002
    - 7225:7225
    - 9000:9000
    - 7211:7211
    - 8211:8211
    - 7210:7210
    - 8212:8212
    volumes:
    - logs:/app/logs
    - data:/app/data
    - models:/app/models
    - ./config:/app/config
  emotion-system:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - core-services
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - SERVICE_REGISTRY_HOST=core-services
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/emotion-system:optimized
    networks:
    - default
    ports:
    - 5590:5590
    - 5704:5704
    - 5705:5705
    - 5625:5625
    - 5708:5708
    - 5703:5703
    volumes:
    - logs:/app/logs
    - ./config:/app/config
  gpu-infrastructure:
    build:
      context: ..
      dockerfile: docker/gpu_base/Dockerfile.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - core-services
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          devices:
          - capabilities:
            - gpu
            count: 1
            driver: nvidia
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - LOG_LEVEL=INFO
    - CUDA_VISIBLE_DEVICES=0
    - SERVICE_REGISTRY_HOST=core-services
    - REDIS_HOST=redis
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/gpu-infrastructure:optimized
    networks:
    - default
    ports:
    - 7223:5575
    - 7224:5570
    - 5572:5572
    - 7226:5617
    volumes:
    - logs:/app/logs
    - models:/app/models
    - ./config:/app/config
  language-processing:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - core-services
    - memory-system
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - SERVICE_REGISTRY_HOST=core-services
    - REDIS_HOST=redis
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/language-processing:optimized
    networks:
    - default
    ports:
    - 7213:7213
    - 7205:7205
    - 5701:5701
    - 5709:5709
    - 5710:5710
    - 5711:5711
    - 5636:5636
    - 5637:5637
    - 5595:5595
    - 5802:5802
    - 5706:5706
    volumes:
    - logs:/app/logs
    - data:/app/data
    - ./config:/app/config
  learning-knowledge:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - core-services
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - SERVICE_REGISTRY_HOST=core-services
    - REDIS_HOST=redis
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/learning-knowledge:optimized
    networks:
    - default
    ports:
    - 7300:7222
    - 7212:7212
    - 7202:7202
    - 5580:5580
    - 5638:5638
    - 5643:5643
    volumes:
    - logs:/app/logs
    - data:/app/data
    - ./config:/app/config
  memory-system:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - core-services
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - SERVICE_REGISTRY_HOST=core-services
    - REDIS_HOST=redis
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/memory-system:optimized
    networks:
    - default
    ports:
    - 5713:5713
    - 5574:5574
    - 5715:5715
    volumes:
    - logs:/app/logs
    - data:/app/data
    - ./config:/app/config
  nats:
    command:
    - -js
    - -sd
    - /data
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: nats:2.10
    networks:
    - default
    ports:
    - 4222:4222
    - 8222:8222
    volumes:
    - nats_data:/data
  reasoning-services:
    build:
      context: ..
      dockerfile: docker/gpu_base/Dockerfile.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - gpu-infrastructure
    deploy:
      resources:
        reservations:
          devices:
          - capabilities:
            - gpu
            count: 1
            driver: nvidia
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - CUDA_VISIBLE_DEVICES=0
    - SERVICE_REGISTRY_HOST=core-services
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/reasoning-services:optimized
    networks:
    - default
    ports:
    - 5612:5612
    - 5646:5646
    - 5641:5641
    volumes:
    - logs:/app/logs
    - models:/app/models
    - ./config:/app/config
  redis:
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - redis-cli
      - ping
      timeout: 10s
    image: redis:7-alpine
    networks:
    - default
    volumes:
    - redis_data:/data
  speech-services:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - gpu-infrastructure
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - SERVICE_REGISTRY_HOST=core-services
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/speech-services:optimized
    networks:
    - default
    ports:
    - 5800:5800
    - 5801:5801
    volumes:
    - logs:/app/logs
    - models:/app/models
    - ./config:/app/config
  utility-services:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - core-services
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - SERVICE_REGISTRY_HOST=core-services
    - REDIS_HOST=redis
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/utility-services:optimized
    networks:
    - default
    ports:
    - 5650:5650
    - 5660:5660
    - 5613:5613
    - 5584:5584
    - 5606:5606
    - 5615:5615
    - 5642:5642
    - 5581:5581
    volumes:
    - logs:/app/logs
    - data:/app/data
    - ./config:/app/config
  vision-processing:
    build:
      context: ..
      dockerfile: docker/gpu_base/Dockerfile.optimized
    command:
    - python
    - /app/main_pc_code/scripts/start_system.py
    depends_on:
    - gpu-infrastructure
    deploy:
      resources:
        reservations:
          devices:
          - capabilities:
            - gpu
            count: 1
            driver: nvidia
    environment:
    - PYTHONPATH=/app:/app/main_pc_code:/app/common
    - CUDA_VISIBLE_DEVICES=0
    - SERVICE_REGISTRY_HOST=core-services
    healthcheck:
      interval: 30s
      retries: 3
      test:
      - CMD
      - python
      - -c
      - import socket,sys,os; p=int(os.getenv('HEALTH_PORT',8000)); s=socket.socket();
        s.settimeout(2); sys.exit(1 if s.connect_ex(('localhost',p)) else 0)
      timeout: 5s
    image: ai-system/vision-processing:optimized
    networks:
    - default
    ports:
    - 5610:5610
    volumes:
    - logs:/app/logs
    - models:/app/models
    - ./config:/app/config
volumes:
  data: null
  logs: null
  models: null
  nats_data: null
  redis_data: null
