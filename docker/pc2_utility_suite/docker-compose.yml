services:
  # Infrastructure - Redis for PC2 Utility Suite
  redis_pc2_utility:
    image: redis:7.2-alpine
    container_name: redis_pc2_utility
    ports:
      - "6395:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_pc2_utility_data:/data
    networks:
      - pc2_utility_suite_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Infrastructure - NATS for PC2 Utility Suite
  nats_pc2_utility:
    image: nats:2.10-alpine
    container_name: nats_pc2_utility
    ports:
      - "4305:4222"
      - "8305:8222"  # HTTP monitoring
    command: [
      "--jetstream",
      "--store_dir", "/data"
    ]
    volumes:
      - nats_pc2_utility_data:/data
    networks:
      - pc2_utility_suite_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  # UnifiedUtilsAgent - Core utilities and helper functions
  unified_utils_agent:
    build:
      context: ../../
      dockerfile: docker/pc2_utility_suite/Dockerfile
    image: pc2_utility_suite:latest
    container_name: pc2_unified_utils_agent
    command: ["python", "pc2_code/agents/ForPC2/unified_utils_agent.py"]
    ports:
      - "7418:7118"   # Service port (7118 + 300 offset)
      - "8418:8118"   # Health check port
    environment:
      LOG_LEVEL: "INFO"
      PYTHONPATH: "/app"
      REDIS_URL: "redis://redis_pc2_utility:6379/0"
      NATS_SERVERS: "nats://nats_pc2_utility:4222"
      PORT: "7118"
      HEALTH_PORT: "8118"
      SCOPE: "pc2_utility_agents"
      UTILS_MODE: "comprehensive"
      MAX_CONCURRENT_TASKS: "10"
      TIMEOUT_SECONDS: "300"
    volumes:
      - ../../logs:/app/logs
      - ../../data:/app/data
      - utils_cache:/app/utils_data/cache
      - utils_temp:/app/utils_data/temp
      - utils_config:/app/utils_data/config
    networks:
      - pc2_utility_suite_network
    depends_on:
      redis_pc2_utility:
        condition: service_healthy
      nats_pc2_utility:
        condition: service_healthy
    restart: unless-stopped

  # FileSystemAssistantAgent - File system operations and management
  filesystem_assistant_agent:
    build:
      context: ../../
      dockerfile: docker/pc2_utility_suite/Dockerfile
    image: pc2_utility_suite:latest
    container_name: pc2_filesystem_assistant_agent
    command: ["python", "pc2_code/agents/filesystem_assistant_agent.py"]
    ports:
      - "7423:7123"   # Service port (7123 + 300 offset)
      - "8423:8123"   # Health check port
    environment:
      LOG_LEVEL: "INFO"
      PYTHONPATH: "/app"
      REDIS_URL: "redis://redis_pc2_utility:6379/1"
      NATS_SERVERS: "nats://nats_pc2_utility:4222"
      PORT: "7123"
      HEALTH_PORT: "8123"
      SCOPE: "pc2_utility_agents"
      FILESYSTEM_ROOT: "/app/filesystem_data"
      MAX_FILE_SIZE: "100MB"
      ALLOWED_EXTENSIONS: "txt,json,yaml,yml,py,js,html,css,md,csv,xml"
      BACKUP_ENABLED: "true"
    volumes:
      - ../../logs:/app/logs
      - ../../data:/app/data
      - filesystem_storage:/app/filesystem_data/storage
      - filesystem_backups:/app/filesystem_data/backups
      - filesystem_uploads:/app/filesystem_data/uploads
      - filesystem_temp:/app/filesystem_data/temp
    networks:
      - pc2_utility_suite_network
    depends_on:
      redis_pc2_utility:
        condition: service_healthy
      nats_pc2_utility:
        condition: service_healthy
      unified_utils_agent:
        condition: service_healthy
    restart: unless-stopped

  # RemoteConnectorAgent - Remote connections and SSH management
  remote_connector_agent:
    build:
      context: ../../
      dockerfile: docker/pc2_utility_suite/Dockerfile
    image: pc2_utility_suite:latest
    container_name: pc2_remote_connector_agent
    command: ["python", "pc2_code/agents/remote_connector_agent.py"]
    ports:
      - "7424:7124"   # Service port (7124 + 300 offset)
      - "8424:8124"   # Health check port
    environment:
      LOG_LEVEL: "INFO"
      PYTHONPATH: "/app"
      REDIS_URL: "redis://redis_pc2_utility:6379/2"
      NATS_SERVERS: "nats://nats_pc2_utility:4222"
      PORT: "7124"
      HEALTH_PORT: "8124"
      SCOPE: "pc2_utility_agents"
      CONNECTION_TIMEOUT: "30"
      MAX_CONNECTIONS: "5"
      SSH_KEY_PATH: "/app/remote_data/keys"
      KNOWN_HOSTS_PATH: "/app/remote_data/known_hosts"
    volumes:
      - ../../logs:/app/logs
      - ../../data:/app/data
      - remote_connections:/app/remote_data/connections
      - remote_keys:/app/remote_data/keys
      - remote_logs:/app/remote_data/logs
      - remote_cache:/app/remote_data/cache
    networks:
      - pc2_utility_suite_network
    depends_on:
      redis_pc2_utility:
        condition: service_healthy
      nats_pc2_utility:
        condition: service_healthy
      unified_utils_agent:
        condition: service_healthy
    restart: unless-stopped

  # SmartHomeAgent - Smart home device control and automation (Tapo Integration)
  smart_home_agent:
    build:
      context: ../../
      dockerfile: docker/pc2_utility_suite/Dockerfile
    image: pc2_utility_suite:latest
    container_name: pc2_smart_home_agent
    command: ["python", "agents/smart_home_agent.py"]
    ports:
      - "7425:7125"   # Service port (7125 + 300 offset)
      - "8425:8125"   # Health check port
      - "9425:9125"   # Smart Home API port
    environment:
      LOG_LEVEL: "INFO"
      PYTHONPATH: "/app"
      REDIS_URL: "redis://redis_pc2_utility:6379/3"
      NATS_SERVERS: "nats://nats_pc2_utility:4222"
      PORT: "7125"
      HEALTH_PORT: "8125"
      API_PORT: "9125"
      SCOPE: "pc2_utility_agents"
      TAPO_USERNAME: "${TAPO_USERNAME}"  # From environment
      TAPO_PASSWORD: "${TAPO_PASSWORD}"  # From environment
      DEVICE_SCAN_INTERVAL: "60"
      AUTO_DISCOVERY: "true"
      INTELLIGENT_CONTROL: "enabled"
      VOICE_CONTROL: "enabled"
    volumes:
      - ../../logs:/app/logs
      - ../../data:/app/data
      - smart_home_config:/app/smart_home_data/config
      - smart_home_schedules:/app/smart_home_data/schedules
      - smart_home_presets:/app/smart_home_data/presets
      - smart_home_logs:/app/smart_home_data/logs
    networks:
      - pc2_utility_suite_network
      - host  # Required for local network device discovery
    depends_on:
      redis_pc2_utility:
        condition: service_healthy
      nats_pc2_utility:
        condition: service_healthy
      unified_utils_agent:
        condition: service_healthy
    restart: unless-stopped
    # Host network access for Tapo device communication
    network_mode: "host"

# Networks
networks:
  pc2_utility_suite_network:
    driver: bridge

# Volumes
volumes:
  redis_pc2_utility_data:
  nats_pc2_utility_data:
  utils_cache:
  utils_temp:
  utils_config:
  filesystem_storage:
  filesystem_backups:
  filesystem_uploads:
  filesystem_temp:
  remote_connections:
  remote_keys:
  remote_logs:
  remote_cache:
  smart_home_config:
  smart_home_schedules:
  smart_home_presets:
  smart_home_logs:
