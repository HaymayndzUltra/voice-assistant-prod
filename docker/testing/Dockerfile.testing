# ðŸš€ MODEL TESTING CONTAINER FOR RTX 4090
# Optimized for LLM + TTS + GGUF testing

FROM nvidia/cuda:12.1-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    git \
    wget \
    curl \
    build-essential \
    cmake \
    ninja-build \
    libportaudio2 \
    libportaudio-dev \
    libasound2-dev \
    libsndfile1-dev \
    ffmpeg \
    espeak-ng \
    espeak-ng-data \
    libespeak-ng-dev \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements/ requirements/
COPY docker/testing/requirements-testing.txt .

# Install Python dependencies
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir -r requirements/base.txt && \
    pip3 install --no-cache-dir -r requirements/gpu.txt && \
    pip3 install --no-cache-dir -r requirements-testing.txt

# Install PyTorch with CUDA support (latest)
RUN pip3 install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Install additional model libraries
RUN pip3 install --no-cache-dir \
    transformers>=4.36.0 \
    accelerate \
    bitsandbytes \
    flash-attn --no-build-isolation \
    TTS>=0.22.0 \
    llama-cpp-python[cuda] \
    soundfile \
    librosa \
    numpy \
    scipy \
    psutil

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/models/gguf && \
    mkdir -p /app/audio_output && \
    mkdir -p /app/cache && \
    mkdir -p /app/logs

# Make scripts executable
RUN chmod +x download_gguf_models.sh && \
    chmod +x complete_model_test.py && \
    chmod +x test_phi3_mini.py

# Set permissions
RUN chown -R 1000:1000 /app

# Expose ports for testing API
EXPOSE 8898 8899

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c "import torch; print('CUDA available:', torch.cuda.is_available())" || exit 1

# Default command
CMD ["python3", "complete_model_test.py"] 