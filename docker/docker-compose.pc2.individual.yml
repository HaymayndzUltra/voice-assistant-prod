version: "3.9"

volumes:
  logs:
  data:
  cache_data:
  models:

networks:
  ai_system_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16

x-common-env: &common-env
  PYTHONPATH: /app
  LOG_LEVEL: INFO
  SERVICE_REGISTRY_HOST: ${SERVICE_REGISTRY_HOST:-192.168.100.16}
  REDIS_HOST: ${REDIS_HOST:-192.168.100.16}
  MAINPC_HOST: 192.168.100.16

x-common-deploy: &common-deploy
  resources:
    limits:
      cpus: "0.8"
      memory: 4096M

x-common-volumes: &common-volumes
  - logs:/app/logs
  - data:/app/data
  - cache_data:/app/cache
  - ../pc2_code/config:/app/pc2_code/config:ro

services:
  memory-orchestrator-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/memory-orchestrator-service:latest
    command: ["python", "/app/pc2_code/agents/memory_orchestrator_service.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    ports:
      - "7140:7140"
      - "8140:8140"
    healthcheck:
      test: ["CMD", "python", "-c", "import zmq,sys,os;ctx=zmq.Context();s=ctx.socket(zmq.REQ);s.connect('tcp://localhost:7140');s.send_string('health_check');sys.exit(0 if s.recv_string() else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy: *common-deploy

  tiered-responder:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/tiered-responder:latest
    command: ["python", "/app/pc2_code/agents/tiered_responder.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
      - resource-manager
    ports:
      - "7100:7100"
    deploy: *common-deploy

  async-processor:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/async-processor:latest
    command: ["python", "/app/pc2_code/agents/async_processor.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - resource-manager
    ports:
      - "7101:7101"
    deploy: *common-deploy

  cache-manager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/cache-manager:latest
    command: ["python", "/app/pc2_code/agents/cache_manager.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
    ports:
      - "7102:7102"
    deploy: *common-deploy

  vision-processing-agent:
    build:
      context: ..
      dockerfile: docker/gpu_base/Dockerfile
    image: ai-system/vision-processing-agent:latest
    command: ["python", "/app/pc2_code/agents/VisionProcessingAgent.py"]
    environment:
      <<: *common-env
      CUDA_VISIBLE_DEVICES: 0
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - cache-manager
    ports:
      - "7150:7150"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 4G

  dream-world-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/dream-world-agent:latest
    command: ["python", "/app/pc2_code/agents/DreamWorldAgent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
    ports:
      - "7104:7104"
    deploy: *common-deploy

  unified-memory-reasoning-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/unified-memory-reasoning-agent:latest
    command: ["python", "/app/pc2_code/agents/unified_memory_reasoning_agent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
    ports:
      - "7105:7105"
    deploy: *common-deploy

  tutor-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/tutor-agent:latest
    command: ["python", "/app/pc2_code/agents/tutor_agent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
    ports:
      - "7108:7108"
    deploy: *common-deploy

  tutoring-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/tutoring-agent:latest
    command: ["python", "/app/pc2_code/agents/tutoring_agent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
    ports:
      - "7131:7131"
    deploy: *common-deploy

  context-manager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/context-manager:latest
    command: ["python", "/app/pc2_code/agents/context_manager.py"]
    environment:
      <<: *common-env
      REDIS_HOST: ${REDIS_HOST:-192.168.100.16}
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
    ports:
      - "7111:7111"
    deploy: *common-deploy

  experience-tracker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/experience-tracker:latest
    command: ["python", "/app/pc2_code/agents/experience_tracker.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - memory-orchestrator-service
    ports:
      - "7112:7112"
    deploy: *common-deploy

  resource-manager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/resource-manager:latest
    command: ["python", "/app/pc2_code/agents/resource_manager.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - observability-hub
    ports:
      - "7113:7113"
    deploy: *common-deploy

  task-scheduler:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/task-scheduler:latest
    command: ["python", "/app/pc2_code/agents/task_scheduler.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - async-processor
    ports:
      - "7115:7115"
    deploy: *common-deploy

  authentication-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/authentication-agent:latest
    command: ["python", "/app/pc2_code/agents/ForPC2/AuthenticationAgent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - unified-utils-agent
    ports:
      - "7116:7116"
    deploy: *common-deploy

  unified-utils-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/unified-utils-agent:latest
    command: ["python", "/app/pc2_code/agents/ForPC2/unified_utils_agent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - observability-hub
    ports:
      - "7118:7118"
    deploy: *common-deploy

  proactive-context-monitor:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/proactive-context-monitor:latest
    command: ["python", "/app/pc2_code/agents/ForPC2/proactive_context_monitor.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - context-manager
    ports:
      - "7119:7119"
    deploy: *common-deploy

  agent-trust-scorer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/agent-trust-scorer:latest
    command: ["python", "/app/pc2_code/agents/AgentTrustScorer.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - observability-hub
    ports:
      - "7122:7122"
    deploy: *common-deploy

  filesystem-assistant-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/filesystem-assistant-agent:latest
    command: ["python", "/app/pc2_code/agents/filesystem_assistant_agent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - unified-utils-agent
      - memory-orchestrator-service
    ports:
      - "7123:7123"
    deploy: *common-deploy

  remote-connector-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/remote-connector-agent:latest
    command: ["python", "/app/pc2_code/agents/remote_connector_agent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - advanced-router
    ports:
      - "7124:7124"
    deploy: *common-deploy

  unified-web-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/unified-web-agent:latest
    command: ["python", "/app/pc2_code/agents/unified_web_agent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - filesystem-assistant-agent
      - memory-orchestrator-service
    ports:
      - "7126:7126"
    deploy: *common-deploy

  dreaming-mode-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/dreaming-mode-agent:latest
    command: ["python", "/app/pc2_code/agents/DreamingModeAgent.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - dream-world-agent
    ports:
      - "7127:7127"
    deploy: *common-deploy

  advanced-router:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/advanced-router:latest
    command: ["python", "/app/pc2_code/agents/advanced_router.py"]
    environment: *common-env
    networks: [ai_system_net]
    volumes: *common-volumes
    depends_on:
      - task-scheduler
    ports:
      - "7129:7129"
    deploy: *common-deploy

  observability-hub:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: ai-system/observability-hub:latest
    command: ["python", "/app/phase1_implementation/consolidated_agents/observability_hub/backup_observability_hub/observability_hub.py"]
    environment:
      <<: *common-env
      PROMETHEUS_PORT: 9000
      SCOPE: pc2_agents
      CROSS_MACHINE_SYNC: "true"
      MAINPC_HUB_ENDPOINT: "http://192.168.100.16:9000"
    networks: [ai_system_net]
    volumes: *common-volumes
    ports:
      - "9000:9000"
      - "9100:9100"
    deploy: *common-deploy