services:
  # Infrastructure - Redis for PC2 Tutoring CPU
  redis_pc2_tutoring:
    image: redis:7.2-alpine
    container_name: redis_pc2_tutoring
    ports:
      - "6393:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_pc2_tutoring_data:/data
    networks:
      - pc2_tutoring_cpu_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Infrastructure - NATS for PC2 Tutoring CPU
  nats_pc2_tutoring:
    image: nats:2.10-alpine
    container_name: nats_pc2_tutoring
    ports:
      - "4303:4222"
      - "8303:8222"  # HTTP monitoring
    command: [
      "--jetstream",
      "--store_dir", "/data"
    ]
    volumes:
      - nats_pc2_tutoring_data:/data
    networks:
      - pc2_tutoring_cpu_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  # TutorAgent - Interactive tutoring and Q&A
  tutor_agent:
    build:
      context: ../../
      dockerfile: docker/pc2_tutoring_cpu/Dockerfile
    image: pc2_tutoring_cpu:latest
    container_name: pc2_tutor_agent
    command: ["python", "pc2_code/agents/tutor_agent.py"]
    ports:
      - "7408:7108"   # Service port (7108 + 300 offset)
      - "8408:8108"   # Health check port
    environment:
      LOG_LEVEL: "INFO"
      PYTHONPATH: "/app"
      REDIS_URL: "redis://redis_pc2_tutoring:6379/0"
      NATS_SERVERS: "nats://nats_pc2_tutoring:4222"
      PORT: "7108"
      HEALTH_PORT: "8108"
      SCOPE: "pc2_tutoring_agents"
      PARALLEL_HEALTH_CHECKS: "true"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      TUTORING_MODE: "interactive"
      SUBJECT_AREAS: "mathematics,science,programming,language_arts"
    volumes:
      - ../../logs:/app/logs
      - ../../data:/app/data
      - tutoring_content:/app/tutoring
    networks:
      - pc2_tutoring_cpu_network
    depends_on:
      redis_pc2_tutoring:
        condition: service_healthy
      nats_pc2_tutoring:
        condition: service_healthy
    restart: unless-stopped

  # TutoringAgent - Session management and progress tracking
  tutoring_agent:
    build:
      context: ../../
      dockerfile: docker/pc2_tutoring_cpu/Dockerfile
    image: pc2_tutoring_cpu:latest
    container_name: pc2_tutoring_agent
    command: ["python", "pc2_code/agents/tutoring_agent.py"]
    ports:
      - "7431:7131"   # Service port (7131 + 300 offset)
      - "8431:8131"   # Health check port
    environment:
      LOG_LEVEL: "INFO"
      PYTHONPATH: "/app"
      REDIS_URL: "redis://redis_pc2_tutoring:6379/1"
      NATS_SERVERS: "nats://nats_pc2_tutoring:4222"
      PORT: "7131"
      HEALTH_PORT: "8131"
      SCOPE: "pc2_tutoring_agents"
      SESSION_TIMEOUT: "3600"
      MAX_SESSIONS: "50"
      PROGRESS_TRACKING: "true"
    volumes:
      - ../../logs:/app/logs
      - ../../data:/app/data
      - tutoring_sessions:/app/sessions
      - progress_data:/app/progress
    networks:
      - pc2_tutoring_cpu_network
    depends_on:
      redis_pc2_tutoring:
        condition: service_healthy
      nats_pc2_tutoring:
        condition: service_healthy
      tutor_agent:
        condition: service_healthy
    restart: unless-stopped

# Networks
networks:
  pc2_tutoring_cpu_network:
    driver: bridge

# Volumes
volumes:
  redis_pc2_tutoring_data:
  nats_pc2_tutoring_data:
  tutoring_content:
  tutoring_sessions:
  progress_data:
