name: Build & Deploy Docker Images

on:
  push:
    branches: [main]
    paths:
      - '**/Dockerfile'
      - '**/docker-compose.yml'
      - '.github/workflows/build-and-deploy.yml'
      - 'scripts/**'
      - 'main_pc_code/**'
      - 'pc2_code/**'
  pull_request:
    branches: [main]

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          # MainPC images
          - image_name: ai_system/infra_core
            dockerfile: main_pc_code/Dockerfile.infra_core
          - image_name: ai_system/coordination
            dockerfile: main_pc_code/Dockerfile.coordination
          - image_name: ai_system/observability_hub
            dockerfile: phase1_implementation/consolidated_agents/observability_hub/Dockerfile
          - image_name: ai_system/memory_stack
            dockerfile: main_pc_code/Dockerfile.memory_stack
          - image_name: ai_system/vision_suite
            dockerfile: main_pc_code/Dockerfile.vision_suite
          - image_name: ai_system/speech_pipeline
            dockerfile: main_pc_code/Dockerfile.speech_pipeline
          - image_name: ai_system/learning_pipeline
            dockerfile: main_pc_code/Dockerfile.learning_pipeline
          - image_name: ai_system/reasoning_suite
            dockerfile: main_pc_code/Dockerfile.reasoning_suite
          - image_name: ai_system/language_stack
            dockerfile: main_pc_code/Dockerfile.language_stack
          - image_name: ai_system/utility_suite
            dockerfile: main_pc_code/Dockerfile.utility_suite
          - image_name: ai_system/emotion_system
            dockerfile: main_pc_code/Dockerfile.emotion_system
          # PC2 images
          - image_name: ai_system_pc2/infra_core
            dockerfile: pc2_code/Dockerfile.infra_core
          - image_name: ai_system_pc2/memory_stack
            dockerfile: pc2_code/Dockerfile.memory_stack
          - image_name: ai_system_pc2/async_pipeline
            dockerfile: pc2_code/Dockerfile.async_pipeline
          - image_name: ai_system_pc2/tutoring_suite
            dockerfile: pc2_code/Dockerfile.tutoring_suite
          - image_name: ai_system_pc2/vision_dream_suite
            dockerfile: pc2_code/Dockerfile.vision_dream_suite
          - image_name: ai_system_pc2/utility_suite
            dockerfile: pc2_code/Dockerfile.utility_suite
          - image_name: ai_system_pc2/web_interface
            dockerfile: pc2_code/Dockerfile.web_interface
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}-${{ matrix.image_name }}
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@v0.13.0
        with:
          image-ref: ghcr.io/${{ github.repository }}:${{ github.sha }}-${{ matrix.image_name }}
          format: table
          exit-code: 1
          ignore-unfixed: true

      - name: Push image on main branch
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.image_name }}:latest
            ghcr.io/${{ github.repository }}/${{ matrix.image_name }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}

  summary:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Success summary
        run: echo "Images built & (if on main) pushed to ghcr.io."